{"version":3,"file":"clearx.js","sources":["../src/id.js","../node_modules/deepmerge/dist/umd.js","../node_modules/fast-deep-equal/index.js","../src/object-utils.js","../src/segment-helper.js","../src/segment.js","../src/data-observer.js","../src/devtools-manager.js","../src/clearx.js"],"sourcesContent":["let counter = 0\n\nlet generate = () => {\n  counter += 1\n  return `clearx-${counter}`\n}\n\nexport default generate\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.deepmerge = factory());\n}(this, (function () { 'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tObject.keys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tObject.keys(source).forEach(function(key) {\n\t\tif (!options.isMergeableObject(source[key]) || !target[key]) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = deepmerge(target[key], source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nreturn deepmerge_1;\n\n})));\n","'use strict';\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    var arrA = isArray(a)\n      , arrB = isArray(b)\n      , i\n      , length\n      , key;\n\n    if (arrA && arrB) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    if (arrA != arrB) return false;\n\n    var dateA = a instanceof Date\n      , dateB = b instanceof Date;\n    if (dateA != dateB) return false;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n\n    var regexpA = a instanceof RegExp\n      , regexpB = b instanceof RegExp;\n    if (regexpA != regexpB) return false;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n\n    var keys = keyList(a);\n    length = keys.length;\n\n    if (length !== keyList(b).length)\n      return false;\n\n    for (i = length; i-- !== 0;)\n      if (!hasProp.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      key = keys[i];\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  return a!==a && b!==b;\n};\n","import deepmerge from 'deepmerge'\nimport equal from 'fast-deep-equal'\n\nconst toNumber = (val) => {\n  if (!isNaN(val)) {\n    return val * 1\n  }\n  return val\n}\n\nconst assign = (obj, key, val) => {\n  if (hasEqual(obj[key], val)) return false\n  obj[key] = val\n  return obj[key] === val\n}\n\nexport const freezeObject = (obj) => {\n  if (Object.freeze) Object.freeze(obj)\n  return obj\n}\n\nexport const hasEqual = (obj1, obj2) => {\n  return obj1 !== undefined && equal(obj1, obj2)\n}\n\nexport const split = (path, seperator = '.', escape = '\\\\') => {\n  if (!path) return []\n  if (Array.isArray(path)) return path\n  const keys = []\n  let key = ''\n  for (let i = 0, l = path.length; i < l; ++i) {\n    const charKey = path[i]\n    if ((charKey === seperator) && (path[i - 1] !== escape)) {\n      if (key.length > 0) {\n        keys.push(toNumber(key))\n      }\n      key = ''\n    } else {\n      if (charKey !== escape) {\n        key += path[i]\n      }\n    }\n  }\n  if (key.length > 0) {\n    keys.push(toNumber(key))\n  }\n  return keys\n}\n\nexport const get = (obj, keys, defaultValue) => {\n  if (obj === undefined) return defaultValue\n  if (!keys || keys.length === 0) {\n    return obj\n  }\n  keys = split(keys)\n  let [key, ...remaining] = keys\n  if (!isNaN(key)) {\n    key *= 1\n  }\n  return get(obj[key], remaining, defaultValue)\n}\n\nexport const set = (obj, keys, value, dontReplace) => {\n  let isDataUpdated = false\n\n  if (obj === undefined) return [false, isDataUpdated]\n  if (!keys || keys.length === 0) return [false, isDataUpdated]\n\n  keys = split(keys)\n  const [key, next, ...remaining] = keys\n  if (next !== undefined) {\n    if (!obj.hasOwnProperty(key)) {\n      const val = !isNaN(next) ? [] : {}\n      isDataUpdated = assign(obj, key, val)\n    }\n    const [_, __] = set(obj[key], [next, ...remaining], value, dontReplace)\n    return [_, __ || isDataUpdated]\n  } else {\n    if (obj.hasOwnProperty(key) && dontReplace) return [true, isDataUpdated]\n    isDataUpdated = assign(obj, key, value)\n    return [true, isDataUpdated]\n  }\n}\n\nexport const has = (obj, keys) => {\n  const value = get(obj, keys)\n  if (value === undefined) return false\n  return true\n}\n\nexport const ensureExists = (obj, keys, value = null) => {\n  return set(obj, keys, value, true)\n}\n\nconst arrayMethods = ['push', 'pop', 'splice', 'shift', 'unshift', 'sort', 'slice']\n\nexport const arrayOps = (obj, keys, method, ...args) => {\n  if (arrayMethods.indexOf(method) === -1) return false\n  let arr = get(obj, keys)\n  if (!Array.isArray(arr)) {\n    arr = []\n    set(obj, keys, arr)\n  }\n  let val\n  try {\n    val = arr[method].apply(arr, args)\n  } catch (ex) {\n    // Probably freeze!\n  }\n  return [true, true, val]\n}\n\nexport const push = (obj, keys, ...values) => {\n  return arrayOps(obj, keys, 'push', ...values)\n}\n\nexport const insert = (obj, keys, value, at) => {\n  if (at === undefined) {\n    return push(obj, keys, value)\n  }\n  return arrayOps(obj, keys, 'splice', at, 0, value)\n}\n\nexport const unshift = (obj, keys, ...args) => {\n  return arrayOps(obj, keys, 'unshift', ...args)\n}\n\nexport const pop = (obj, keys) => {\n  return arrayOps(obj, keys, 'pop')\n}\n\nexport const shift = (obj, keys) => {\n  return arrayOps(obj, keys, 'shift')\n}\n\nexport const splice = (obj, keys, ...args) => {\n  return arrayOps(obj, keys, 'splice', ...args)\n}\n\nexport const slice = (obj, keys, ...args) => {\n  const result = arrayOps(obj, keys, 'slice', ...args)\n  return result[2]\n}\n\nexport const sort = (obj, keys, ...args) => {\n  return arrayOps(obj, keys, 'sort', ...args)\n}\n\nexport const increment = (obj, keys, by = 1) => {\n  let val = get(obj, keys) * 1\n  if (isNaN(val)) {\n    val = 0\n  }\n  val += by\n  return set(obj, keys, val)\n}\n\nexport const decrement = (obj, keys, by = 1) => {\n  return increment(obj, keys, by * -1)\n}\n\nexport const toggle = (obj, keys) => {\n  const existing = !!get(obj, keys)\n  return set(obj, keys, !existing)\n}\n\nexport const empty = (obj, keys) => {\n  let isDataUpdated = false\n  const value = get(obj, keys)\n  if (value === undefined) return [true, isDataUpdated]\n  let finalValue\n  switch (true) {\n    case typeof value === 'string':\n      finalValue = ''\n      break\n    case typeof value === 'number':\n      finalValue = 0\n      break\n    case typeof value === 'boolean':\n      finalValue = false\n      break\n    case Array.isArray(value):\n      value.length = 0\n      return [true, value.length === 0]\n    case typeof value === 'object':\n      for (const i in value) {\n        if (value.hasOwnProperty(i)) {\n          isDataUpdated = delete value[i] || isDataUpdated\n        }\n      }\n      return [true, isDataUpdated]\n  }\n  return set(obj, keys, finalValue)\n}\n\nexport const coalesce = (obj, keysArr, defaultValue) => {\n  for (let i = 0, l = keysArr.length; i < l; ++i) {\n    const val = get(obj, keysArr[i])\n    if (val !== undefined && val !== null) {\n      return val\n    }\n  }\n  return defaultValue\n}\n\nexport const del = (obj, keys) => {\n  let isDataUpdated = false\n  if (obj === undefined) return [false, isDataUpdated]\n  if (!keys || keys.length === 0) return [false, isDataUpdated]\n  keys = split(keys)\n  const [key, ...remaining] = keys\n  if (keys.length === 1) {\n    if (Array.isArray(obj) && !isNaN(key)) {\n      const len = obj.length\n      obj.splice(key, 1)\n      isDataUpdated = len !== obj.length\n    } else if (obj.hasOwnProperty(key)) {\n      isDataUpdated = delete obj[key]\n    }\n    return [true, isDataUpdated]\n  } else {\n    return del(obj[key], [...remaining])\n  }\n}\n\nexport const merge = (obj, keys, data) => {\n  ensureExists(obj, keys, Array.isArray(data) ? [] : {})\n  const current = get(obj, keys)\n  const merged = deepmerge(current, data)\n  return set(obj, keys, merged)\n}\n\nexport const isEqual = (obj, keys, data) => {\n  const current = get(obj, keys)\n  return equal(current, data)\n}\n","import { split, freezeObject } from './object-utils'\nimport deepmerge from 'deepmerge'\n\nclass SegmentHelper {\n  constructor (paths, delimiter = '.', store, dataObserver) {\n    this.paths = paths\n    this.delimiter = delimiter\n    this.store = store\n    this.dataObserver = dataObserver\n    this.components = []\n    this._afterUpdateEvents = []\n    this._dataTransformers = []\n  }\n\n  get keys () {\n    const paths = this.paths\n    if (Array.isArray(paths)) return paths\n    let keys = []\n    if (typeof paths === 'string') {\n      keys = [split(paths, this.delimiter)]\n    } else if (paths.toString() === '[object Object]') {\n      for (const key in paths) {\n        if (!paths.hasOwnProperty(key)) continue\n        keys.push(split(paths[key], this.delimiter))\n      }\n    } else {\n      return paths\n    }\n    return keys\n  }\n\n  observe (force) {\n    if (this.components.length === 0 && !force) return\n    if (this.cancelObserver) return\n\n    const observer = this.dataObserver\n    const keys = this.keys\n    const listener = this.updateComponents.bind(this)\n    this.cancelDataListener = observer.attachObserver(keys, listener)\n  }\n\n  unobserve () {\n    if (!this.cancelDataListener) return\n    this.cancelDataListener()\n    delete this.cancelDataListener\n  }\n\n  listenUnmount (component, onUnmount) {\n    if (Array.isArray(component)) return () => {}\n    const componentWillUnmount = component.componentWillUnmount\n    component.componentWillUnmount = () => {\n      onUnmount()\n      if (typeof this.componentWillUnmount === 'function') {\n        this.componentWillUnmount.call(component)\n      }\n    }\n    component.componentWillUnmount.__original = componentWillUnmount\n  }\n\n  unlistenUnmount (component) {\n    const componentWillUnmount = component.componentWillUnmount\n    if (!componentWillUnmount) return\n    const original = component.componentWillUnmount.__original\n    if (!original) return\n    component.componentWillUnmount = original\n  }\n\n  dataTransformer (func) {\n    if (typeof func === 'function') {\n      this._dataTransformers.push(func)\n      this.updateComponents()\n      return () => {\n        const idx = this._dataTransformers.indexOf(func)\n        if (idx > -1) this._dataTransformers.splice(idx, 1)\n      }\n    }\n    return () => {}\n  }\n\n  get dataTransformers () {\n    return this._dataTransformers.slice(0)\n  }\n\n  applyDataTransformers (data) {\n    this._dataTransformers.forEach((func) => {\n      try {\n        data = func(data)\n      } catch (ex) {\n        console.log(func, 'failing to transform', data)\n      }\n    })\n    return data\n  }\n\n  updateData () {\n    let data = {}\n    let paths = this.paths\n\n    if (typeof paths === 'string') {\n      paths = split(paths, this.delimiter)\n      data = this.store.get(paths)\n    } else if (Array.isArray(paths)) {\n      data = paths.map((path) => {\n        const key = split(path, this.delimiter)\n        return this.store.get(key)\n      })\n    } else {\n      for (const key in paths) {\n        const path = split(paths[key], this.delimiter)\n        data[key] = this.store.get(path)\n      }\n    }\n\n    data = this.applyDataTransformers(data)\n\n    if (typeof data === 'object') {\n      data = freezeObject(deepmerge({}, data))\n    }\n\n    this._data = data\n  }\n\n  get data () {\n    if (!this._data) {\n      this.updateData()\n    }\n    return this._data\n  }\n\n  updateComponents () {\n    this.updateData()\n    this.components.forEach((component) => {\n      this.assignState(component)\n    })\n    this.executeAfterUpdate()\n  }\n\n  assignStateFC (component, initialAssignment) {\n    let setState\n    if (Array.isArray(component)) {\n      setState = component[1]\n    }\n    if (!setState) return\n    if (initialAssignment) return true\n    component[0] = this._data\n    setState(this._data)\n    return true\n  }\n\n  assignStateCC (component, initialAssignment) {\n    if (typeof component.setState !== 'function') return\n    if (initialAssignment) {\n      component.state = component.state || {}\n      component.state.store = component.state.store || {}\n      component.state.store = {\n        ...component.state.store,\n        ...this.data\n      }\n    } else {\n      component.setState({\n        ...component.state,\n        store: {\n          ...component.state.store,\n          ...this.data\n        }\n      })\n    }\n    return true\n  }\n\n  assignStateOthers (component) {\n    if (typeof component === 'object') {\n      component.data = this.data\n    }\n  }\n\n  assignState (component, initial = false) {\n    const updatedSC = this.assignStateFC(component, initial)\n    const updatedCC = this.assignStateCC(component, initial)\n    if (!updatedSC && !updatedCC) {\n      this.assignStateOthers(component, initial)\n    }\n  }\n\n  onUpdate (func) {\n    if (typeof func === 'function') {\n      this._afterUpdateEvents.push(func)\n      return () => {\n        const idx = this._afterUpdateEvents.indexOf(func)\n        if (idx > -1) this._afterUpdateEvents.splice(idx, 1)\n      }\n    }\n    return () => {}\n  }\n\n  get afterUpdateEvents () {\n    return this._afterUpdateEvents.slice(0)\n  }\n\n  executeAfterUpdate () {\n    this._afterUpdateEvents.forEach((func) => {\n      try {\n        func(this.data)\n      } catch (ex) {\n        console.log(ex)\n      }\n    })\n  }\n\n  get hasDataListener () {\n    return !!this.cancelDataListener\n  }\n\n  addMark (component, mark) {\n    let comp = component\n    if (Array.isArray(component)) {\n      comp = component[1]\n    }\n    comp.__segment = mark\n  }\n\n  removeMark (component) {\n    let comp = component\n    if (Array.isArray(component)) {\n      comp = component[1]\n    }\n    delete comp.__segment\n  }\n}\n\nexport default SegmentHelper\n","import identifier from './id'\nimport SegmentHelper from './segment-helper'\n\nclass Segment {\n  constructor (paths, id, delimiter, store, dataObserver) {\n    this.id = id || identifier()\n    this.paths = paths\n\n    this._helper = new SegmentHelper(paths, delimiter, store, dataObserver)\n\n    this.delimiter = delimiter\n    this.store = store\n    this.dataObserver = dataObserver\n  }\n\n  findComponent (search) {\n    if (!this._helper) return -1\n    if (Array.isArray(search)) {\n      search = search[1]\n    }\n    const components = this._helper.components\n    for (let i = 0; i < components.length; i++) {\n      let component = components[i]\n      if (Array.isArray(component)) {\n        component = component[1]\n      }\n      if (search === component) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  get data () {\n    if (!this._helper) return {}\n    return this._helper.data\n  }\n\n  get components () {\n    if (!this._helper) return []\n    return this._helper.components.slice(0)\n  }\n\n  get active () {\n    if (!this._helper) return false\n    return this._helper.hasDataListener\n  }\n\n  get afterUpdateEvents () {\n    if (!this._helper) return []\n    return this._helper.afterUpdateEvents\n  }\n\n  get dataTransformers () {\n    if (!this._helper) return []\n    return this._helper.dataTransformers\n  }\n\n  link (component) {\n    if (!component) return {}\n    const helper = this._helper\n    if (!helper) return {}\n    const store = this.store\n    const unlink = store._unlinkComponentFromAllSegments.bind(store, component)\n    const result = [this.data, unlink]\n    if (this.findComponent(component) > -1) return result\n    helper.components.push(component)\n    helper.observe(this.keepSyncing)\n    helper.addMark(component, this)\n    helper.listenUnmount(component, unlink)\n    helper.assignState(component, true)\n    return result\n  }\n\n  unlink (component) {\n    if (!component) return false\n    const helper = this._helper\n    if (!helper) return false\n    const idx = this.findComponent(component)\n    if (idx > -1) {\n      helper.removeMark(component)\n      helper.components.splice(idx, 1)\n      helper.unlistenUnmount(component)\n    }\n    if ((helper.components.length === 0) && !this.keepSyncing) {\n      helper.unobserve()\n    }\n    return idx > -1\n  }\n\n  sync (on = true) {\n    if (!this._helper) return false\n    this.keepSyncing = on\n    if (on && !this.active) {\n      this._helper.observe(true)\n    }\n    if (!on && this.active) {\n      this._helper.unobserve()\n    }\n    return true\n  }\n\n  unlinkAll () {\n    if (!this._helper) return false\n    this._helper.components.forEach(this.unlink.bind(this))\n    return true\n  }\n\n  onUpdate (func) {\n    if (!this._helper) return () => {}\n    return this._helper.onUpdate(func)\n  }\n\n  dataTransformer (func) {\n    if (!this._helper) return () => {}\n    return this._helper.dataTransformer(func)\n  }\n\n  teardown () {\n    if (!this._helper) return true\n    this.unlinkAll()\n    this._helper.unobserve()\n    delete this._helper\n    delete this.dataObserver\n    this.store.removeSegment(this)\n    return true\n  }\n}\n\nexport default Segment\n","import { split } from './object-utils'\nclass DataObserver {\n  constructor (store) {\n    this.store = store\n    this.listeners = {}\n    this.counter = 0\n  }\n\n  attachObserver (keys, listener) {\n    if (!listener) return\n    if (!keys || keys.length === 0) return\n    ++this.counter\n    const id = `data-slice:${this.counter}`\n    this.listeners[id] = {\n      keys,\n      listener\n    }\n    return () => {\n      delete this.listeners[id]\n    }\n  }\n\n  dataUpdatedAt (changedKey) {\n    const seperator = '>>'\n    const targets = []\n    const changedPath = split(changedKey).join(seperator)\n    for (const id in this.listeners) {\n      let { keys, listener } = this.listeners[id]\n      keys = keys.filter((key) => {\n        const keyPath = split(key).join(seperator)\n        return keyPath.startsWith(changedPath) || changedPath.startsWith(keyPath)\n      })\n      if (keys.length > 0) targets.push([keys, listener])\n    }\n    targets.forEach(([keys, listener]) => {\n      try {\n        listener(keys)\n      } catch (ex) {\n        console.log('Error updating', listener, keys)\n      }\n    })\n  }\n\n  teardown () {\n    this.listeners = {}\n  }\n}\nexport default DataObserver\n","class DevtoolsManager {\n  constructor ({devtoolsOptions, name} = {}) {\n    if (!name && !(document && document.title)) {\n      name = 'ClearX'\n    }\n\n    if (typeof window !== 'undefined') {\n      const reduxLib = (window).__REDUX_DEVTOOLS_EXTENSION__\n      if (reduxLib) {\n        this._initReduxDevtools(reduxLib, devtoolsOptions, name)\n      }\n    }\n  }\n\n  _initReduxDevtools (reduxLib, devtoolsOptions, name) {\n    const options =\n      (typeof devtoolsOptions === 'object') ? devtoolsOptions : undefined\n\n    this.reduxDevtools = reduxLib.connect({\n      name,\n      autoPause: true,\n      ...options,\n      stateSanitizer: state => state,\n      features: {\n        jump: false,\n        skip: false,\n        ...(options ? options.features : undefined)\n      }\n    })\n\n    this.reduxDevtools.init(undefined)\n  }\n\n  update ({event, state}) {\n    if (this.reduxDevtools) {\n      this.reduxDevtools.send(event, state)\n    }\n  }\n}\nexport default DevtoolsManager\n","import Segment from './segment'\nimport DataObserver from './data-observer'\nimport DevtoolsManager from './devtools-manager'\nimport { sort, get, set, coalesce, empty, insert, push, pop, shift, splice, unshift, ensureExists, del, has, merge, increment, decrement, toggle, isEqual, slice } from './object-utils'\n\nclass Clearx {\n  constructor (data, options) {\n    this.data = data\n    this.segments = []\n    this.dataObserver = new DataObserver(this)\n    this.delimiter = '.'\n    this.onUpdateEvents = []\n\n    if (options) {\n      if (options.devtools === true) {\n        this.devtools = new DevtoolsManager(options)\n      }\n    }\n  }\n\n  triggerEvents (key) {\n    this.dataObserver.dataUpdatedAt(key)\n  }\n\n  updateDevTools (key, value) {\n    const path = key.join('/')\n    this.devtools.update({\n      event: path,\n      state: this.data\n    })\n  }\n\n  executeUtil (key, [status, changed, value]) {\n    if (changed) {\n      this.triggerEvents(key)\n\n      if (this.devtools) {\n        this.updateDevTools(key, value)\n      }\n    }\n    this.executeOnUpdateEvents(changed, key)\n\n    return status\n  }\n\n  get (key, defaultValue) {\n    return get(this.data, key, defaultValue)\n  }\n\n  set (key, value, doNotReplace = false) {\n    return this.executeUtil(key, set(this.data, key, value, doNotReplace))\n  }\n\n  coalesce (keys, defaultValue) {\n    return coalesce(this.data, keys, defaultValue)\n  }\n\n  empty (key) {\n    return this.executeUtil(key, empty(this.data, key))\n  }\n\n  insert (key, value, position) {\n    return this.executeUtil(key, insert(this.data, key, value, position))\n  }\n\n  push (key, ...values) {\n    return this.executeUtil(key, push(this.data, key, ...values))\n  }\n\n  unshift (key, ...values) {\n    return this.executeUtil(key, unshift(this.data, key, ...values))\n  }\n\n  pop (key) {\n    return this.executeUtil(key, pop(this.data, key))\n  }\n\n  shift (key) {\n    return this.executeUtil(key, shift(this.data, key))\n  }\n\n  splice (key, ...args) {\n    return this.executeUtil(key, splice(this.data, key, ...args))\n  }\n\n  slice (key, ...args) {\n    return slice(this.data, key, ...args)\n  }\n\n  sort (key, ...args) {\n    return this.executeUtil(key, sort(this.data, key, ...args))\n  }\n\n  ensureExists (key, defaultValue) {\n    return this.executeUtil(key, ensureExists(this.data, key, defaultValue))\n  }\n\n  delete (key) {\n    return this.executeUtil(key, del(this.data, key))\n  }\n\n  has (key) {\n    return has(this.data, key)\n  }\n\n  merge (key, data) {\n    return this.executeUtil(key, merge(this.data, key, data))\n  }\n\n  increment (key, by) {\n    return this.executeUtil(key, increment(this.data, key, by))\n  }\n\n  decrement (key, by) {\n    return this.executeUtil(key, decrement(this.data, key, by))\n  }\n\n  toggle (key) {\n    return this.executeUtil(key, toggle(this.data, key))\n  }\n\n  isEqual (key, value) {\n    return isEqual(this.data, key, value)\n  }\n\n  paths (keys, id) {\n    const segment = new Segment(keys, id, this.delimiter, this, this.dataObserver)\n    this.segments.push(segment)\n    return segment\n  }\n\n  bind (options = {}) {\n    const { to, afterUpdate, id, paths, dataTransformer } = options\n    let component = to\n    if (Array.isArray(component)) {\n      component = to[1]\n    }\n    let segment\n    segment = component.__segment\n    if (segment) {\n      return segment.link(to)\n    }\n    segment = this.paths(paths, id, this.delimiter)\n    segment.onUpdate(afterUpdate)\n    segment.dataTransformer(dataTransformer)\n    const link = segment.link(to)\n\n    if (Array.isArray(to)) {\n      return link\n    }\n    return segment\n  }\n\n  removeSegment (segment) {\n    const index = this.segments.indexOf(segment)\n    if (index > -1) {\n      segment.teardown()\n      this.segments.splice(index, 1)\n      return true\n    }\n    return false\n  }\n\n  onUpdate (func) {\n    if (typeof func === 'function') {\n      this.onUpdateEvents.push(func)\n      return () => {\n        const idx = this.onUpdateEvents.indexOf(func)\n        if (idx > -1) this.onUpdateEvents.splice(idx, 1)\n      }\n    }\n    return () => {}\n  }\n\n  executeOnUpdateEvents (changed, changedKeys) {\n    this.onUpdateEvents.forEach((func) => {\n      try {\n        func(changed, changedKeys, this.data, this)\n      } catch (ex) {\n        console.log('onUpdate', func, changedKeys)\n      }\n    })\n  }\n\n  _unlinkComponentFromAllSegments (component) {\n    this.segments.forEach((segment) => {\n      segment.unlink(component)\n    })\n  }\n\n  teardown () {\n    this.segments.forEach((segment) => {\n      segment.teardown()\n    })\n    this.dataObserver.teardown()\n    delete this.dataObserver\n    this.data = {}\n    return true\n  }\n}\nexport default Clearx\n"],"names":["let","counter","module","isMergeableObject","value","isNonNullObject","stringValue","Object","prototype","toString","call","$$typeof","REACT_ELEMENT_TYPE","isReactElement","isSpecial","Symbol","for","cloneUnlessOtherwiseSpecified","options","clone","deepmerge","val","Array","isArray","defaultArrayMerge","target","source","concat","map","element","arrayMerge","sourceIsArray","destination","keys","forEach","key","mergeObject","all","array","Error","reduce","prev","next","factory","keyList","hasProp","hasOwnProperty","equal","a","b","i","length","arrA","arrB","dateA","Date","dateB","getTime","regexpA","RegExp","regexpB","toNumber","isNaN","assign","obj","hasEqual","obj1","obj2","undefined","split","path","seperator","escape","const","l","charKey","push","get","defaultValue","remaining","set","dontReplace","isDataUpdated","ensureExists","arrayMethods","arrayOps","method","indexOf","arr","apply","args","ex","values","unshift","splice","slice","result","sort","increment","by","del","len","SegmentHelper","paths","delimiter","store","dataObserver","this","components","_afterUpdateEvents","_dataTransformers","prototypeAccessors","observe","force","cancelObserver","observer","listener","updateComponents","bind","cancelDataListener","attachObserver","unobserve","listenUnmount","component","onUnmount","componentWillUnmount","__original","unlistenUnmount","original","dataTransformer","func","idx","dataTransformers","applyDataTransformers","data","console","log","updateData","freeze","_data","assignState","executeAfterUpdate","assignStateFC","initialAssignment","setState","assignStateCC","state","assignStateOthers","initial","updatedSC","updatedCC","onUpdate","afterUpdateEvents","hasDataListener","addMark","mark","comp","__segment","removeMark","Segment","id","_helper","findComponent","search","active","link","helper","unlink","_unlinkComponentFromAllSegments","keepSyncing","sync","on","unlinkAll","teardown","removeSegment","DataObserver","listeners","dataUpdatedAt","changedKey","targets","changedPath","join","filter","keyPath","startsWith","ref","DevtoolsManager","name","document","title","window","reduxLib","__REDUX_DEVTOOLS_EXTENSION__","_initReduxDevtools","devtoolsOptions","reduxDevtools","connect","autoPause","stateSanitizer","features","jump","skip","init","update","send","event","Clearx","segments","onUpdateEvents","devtools","triggerEvents","updateDevTools","executeUtil","changed","executeOnUpdateEvents","status","doNotReplace","coalesce","keysArr","empty","finalValue","insert","position","at","pop","shift","delete","has","merge","current","merged","decrement","toggle","existing","isEqual","segment","to","afterUpdate","index","changedKeys"],"mappings":"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"}