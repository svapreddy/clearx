{"version":3,"file":"clearx.js","sources":["../node_modules/deepmerge/dist/umd.js","../node_modules/fast-deep-equal/index.js","../src/object-utils.js","../src/segment.js","../src/data-observer.js","../src/clearx.js"],"sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.deepmerge = factory());\n}(this, (function () { 'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tObject.keys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tObject.keys(source).forEach(function(key) {\n\t\tif (!options.isMergeableObject(source[key]) || !target[key]) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = deepmerge(target[key], source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nreturn deepmerge_1;\n\n})));\n","'use strict';\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    var arrA = isArray(a)\n      , arrB = isArray(b)\n      , i\n      , length\n      , key;\n\n    if (arrA && arrB) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    if (arrA != arrB) return false;\n\n    var dateA = a instanceof Date\n      , dateB = b instanceof Date;\n    if (dateA != dateB) return false;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n\n    var regexpA = a instanceof RegExp\n      , regexpB = b instanceof RegExp;\n    if (regexpA != regexpB) return false;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n\n    var keys = keyList(a);\n    length = keys.length;\n\n    if (length !== keyList(b).length)\n      return false;\n\n    for (i = length; i-- !== 0;)\n      if (!hasProp.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      key = keys[i];\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  return a!==a && b!==b;\n};\n","import deepmerge from 'deepmerge'\nimport equal from 'fast-deep-equal'\n\nconst toNumber = (val) => {\n  if (!isNaN(val)) {\n    return parseInt(val, 10)\n  }\n  return val\n}\n\nconst assign = (obj, key, val) => {\n  if (hasEqual(obj[key], val)) return false\n  obj[key] = val\n  return obj[key] === val\n}\n\nexport const freezeObject = (obj) => {\n  if (Object.freeze) Object.freeze(obj)\n}\n\nexport const hasEqual = (obj1, obj2) => {\n  return obj1 !== undefined && equal(obj1, obj2)\n}\n\nexport const split = (path, seperator = '.', escape = '\\\\') => {\n  if (!path) return []\n  if (Array.isArray(path)) return path\n  let keys = []\n  let key = ''\n  for (let i = 0, l = path.length; i < l; ++i) {\n    let charKey = path[i]\n    if ((charKey === seperator) && (path[i - 1] !== escape)) {\n      if (key.length > 0) {\n        keys.push(toNumber(key))\n      }\n      key = ''\n    } else {\n      if (charKey !== escape) {\n        key += path[i]\n      }\n    }\n  }\n  if (key.length > 0) {\n    keys.push(toNumber(key))\n  }\n  return keys\n}\n\nexport const get = (obj, keys, defaultValue) => {\n  if (obj === undefined) return defaultValue\n  if (!keys || keys.length === 0) {\n    return obj\n  }\n  keys = split(keys)\n  let [key, ...remaining] = keys\n  if (!isNaN(key)) {\n    key *= 1\n  }\n  return get(obj[key], remaining, defaultValue)\n}\n\nexport const set = (obj, keys, value, dontReplace) => {\n  let isDataUpdated = false\n\n  if (obj === undefined) return [false, isDataUpdated]\n  if (!keys || keys.length === 0) return [false, isDataUpdated]\n\n  keys = split(keys)\n  let [key, next, ...remaining] = keys\n  if (next) {\n    if (!obj.hasOwnProperty(key)) {\n      const val = !isNaN(next) ? [] : {}\n      isDataUpdated = assign(obj, key, val)\n    }\n    const [_, __] = set(obj[key], [next, ...remaining], value, dontReplace)\n    return [_, __ || isDataUpdated]\n  } else {\n    if (obj.hasOwnProperty(key) && dontReplace) return [true, isDataUpdated]\n    isDataUpdated = assign(obj, key, value)\n    return [true, isDataUpdated]\n  }\n}\n\nexport const has = (obj, keys) => {\n  const value = get(obj, keys)\n  if (value === undefined || value === null) return false\n  return true\n}\n\nexport const ensureExists = (obj, keys, value) => {\n  return set(obj, keys, value, true)\n}\n\nconst arrayMethods = [ 'push', 'pop', 'splice', 'shift', 'unshift', 'sort' ]\n\nexport const arrayOps = (obj, keys, method, ...args) => {\n  if (arrayMethods.indexOf(method) === -1) return false\n  let arr = get(obj, keys)\n  if (!Array.isArray(arr)) {\n    arr = []\n    set(obj, keys, arr)\n  }\n  const origLength = arr.length\n  arr[method].apply(arr, args)\n  return [true, arr.length !== origLength]\n}\n\nexport const insert = (obj, keys, value, at) => {\n  return arrayOps(obj, keys, 'splice', at, 0, value)\n}\n\nexport const push = (obj, keys, ...values) => {\n  return arrayOps(obj, keys, 'push', ...values)\n}\n\nexport const unshift = (obj, keys, ...args) => {\n  return arrayOps(obj, keys, 'unshift', ...args)\n}\n\nexport const pop = (obj, keys) => {\n  return arrayOps(obj, keys, 'pop')\n}\n\nexport const shift = (obj, keys) => {\n  return arrayOps(obj, keys, 'shift')\n}\n\nexport const splice = (obj, keys, ...args) => {\n  return arrayOps(obj, keys, 'unshift', ...args)\n}\n\nexport const sort = (obj, keys, ...args) => {\n  return arrayOps(obj, keys, 'sort', ...args)\n}\n\nexport const empty = (obj, keys) => {\n  let isDataUpdated = false\n  const value = get(obj, keys)\n  if (value === undefined) return [true, isDataUpdated]\n  let finalValue\n  switch (true) {\n    case typeof value === 'string':\n      finalValue = ''\n      break\n    case typeof value === 'number':\n      finalValue = 0\n      break\n    case typeof value === 'boolean':\n      finalValue = false\n      break\n    case Array.isArray(value):\n      value.length = 0\n      break\n    case typeof value === 'object':\n      for (let i in value) {\n        if (value.hasOwnProperty(i)) {\n          isDataUpdated = delete value[i] || isDataUpdated\n        }\n      }\n      return [true, isDataUpdated]\n  }\n  return set(obj, keys, finalValue)\n}\n\nexport const coalesce = (obj, keysArr, defaultValue) => {\n  for (let i = 0, l = keysArr.length; i < l; ++i) {\n    const val = get(obj, keysArr[i])\n    if (val !== undefined) {\n      return val\n    }\n  }\n  return defaultValue\n}\n\nexport const del = (obj, keys) => {\n  let isDataUpdated = false\n  if (obj === undefined) return [false, isDataUpdated]\n  if (!keys || keys.length === 0) return [false, isDataUpdated]\n  keys = split(keys)\n  let [key, ...remaining] = keys\n  if (keys.length === 1) {\n    if (Array.isArray(obj) && !isNaN(key)) {\n      isDataUpdated = splice(obj, key, 1)\n    } else if (obj.hasOwnProperty(key)) {\n      isDataUpdated = delete obj[key]\n    }\n    return [true, isDataUpdated]\n  } else {\n    return del(obj[key], [...remaining])\n  }\n}\n\nexport const merge = (obj, keys, data) => {\n  return set(obj, keys, deepmerge(get(obj, keys), data))\n}\n","import { split, freezeObject } from './object-utils'\nimport deepmerge from 'deepmerge'\n\nclass Segment {\n  constructor (config, store, dataObserver) {\n    this.config = config\n    this.store = store\n    this.dataObserver = dataObserver\n    this.detachListeners = () => {}\n    this.keySeperator = '.'\n    this.listeningKeys = {}\n    this.bootstrap()\n    this.active = true\n  }\n  attachListeners () {\n    const dataChanges = this.listenDataChanges()\n    const onUnmount = this.listenUnmount()\n    return () => {\n      dataChanges()\n      onUnmount()\n    }\n  }\n  normalizePaths () {\n    let listeningKeys = {}\n    let paths = this.config.paths\n    for (const key in paths) {\n      if (paths.hasOwnProperty(key)) {\n        listeningKeys[key] = split(paths[key], this.keySeperator)\n      }\n    }\n    this.listeningKeys = listeningKeys\n  }\n  listenDataChanges () {\n    let listeningKeys = Object.values(this.listeningKeys)\n    this.dataObserver.attachObserver(listeningKeys, this.dataUpdated.bind(this))\n    return () => {\n      this.dataObserver.detachObserver(this)\n    }\n  }\n  listenUnmount () {\n    const target = this.config.to\n    this.componentWillUnmount = target.componentWillUnmount\n\n    target.componentWillUnmount = () => {\n      this.destroy()\n      if (typeof this.componentWillUnmount === 'function') {\n        this.componentWillUnmount.call(target)\n      }\n    }\n\n    return () => {\n      target.componentWillUnmount = this.componentWillUnmount\n      delete this.componentWillUnmount\n    }\n  }\n  get data () {\n    let segment = {}\n    const paths = this.config.paths\n    for (const key in paths) {\n      segment[key] = this.store.get(paths[key])\n    }\n    return freezeObject(deepmerge({}, segment))\n  }\n  dataUpdated () {\n    this.assignState()\n  }\n  assignState (initialAssignment) {\n    let target, setState\n    if (Array.isArray(this.config.to)) {\n      [target, setState] = this.config.to\n    } else {\n      target = this.config.to\n    }\n    const data = this.data\n    if (typeof setState === 'function') {\n      !initialAssignment && setState(data)\n    } else if (typeof target.setState === 'function') {\n      if (initialAssignment) {\n        target.state.store = data\n      } else {\n        target.setState({\n          store: data\n        })\n      }\n    } else {\n      target.store = data\n    }\n    const events = this.config\n    if (events && typeof events.afterUpdate === 'function') {\n      events.afterUpdate(data)\n    }\n    return data\n  }\n  bootstrap () {\n    this.normalizePaths()\n    this.detachListeners = this.attachListeners()\n    this.interface = {\n      store: this.assignState(true),\n      destroy: this.destroy.bind(this)\n    }\n    freezeObject(this.interface)\n  }\n  destroy () {\n    this.detachListeners()\n  }\n}\n\nexport default Segment\n","import { split } from './object-utils'\nclass DataObserver {\n  constructor (store) {\n    this.store = store\n    this.listeners = {}\n    this.counter = 0\n  }\n  attachObserver (keys, listener) {\n    if (!listener) return\n    if (!keys || keys.length === 0) return\n    ++this.counter\n    const id = `data-slice:${this.counter}`\n    this.listeners[id] = {\n      keys,\n      listener\n    }\n    return () => {\n      delete this.listeners[id]\n    }\n  }\n  dataUpdatedAt (changedKey) {\n    const seperator = '>>'\n    const targets = []\n    const changedPath = split(changedKey).join(seperator)\n    for (let id in this.listeners) {\n      let { keys, listener } = this.listeners[id]\n      keys = keys.filter((key) => {\n        const keyPath = split(key).join(seperator)\n        return keyPath.startsWith(changedPath) || changedPath.startsWith(keyPath)\n      })\n      if (keys.length > 0) targets.push([keys, listener])\n    }\n    targets.forEach(([keys, listener]) => {\n      try {\n        listener(keys)\n      } catch (ex) {\n        console.log('Error updating', listener, keys)\n      }\n    })\n  }\n  destroy () {\n    this.listeners = {}\n  }\n}\nexport default DataObserver\n","import Segment from './segment'\nimport DataObserver from './data-observer'\nimport { sort, get, set, coalesce, empty, insert, push, pop, shift, splice, unshift, ensureExists, del, has, merge } from './object-utils'\n\nclass Clearx {\n  constructor (data, { keySeperator = '.' }) {\n    this.data = data\n    this.segments = []\n    this.dataObserver = new DataObserver(this)\n    this.keySeperator = keySeperator\n  }\n  triggerEvents (key) {\n    this.dataObserver.dataUpdatedAt(key)\n  }\n  executeUtil (key, [status, changed]) {\n    if (changed) this.triggerEvents(key)\n    return status\n  }\n  get (key, defaultValue) {\n    return get(this.data, key, defaultValue)\n  }\n  set (key, value, doNotReplace = false) {\n    return this.executeUtil(key, set(this.data, key, value, doNotReplace))\n  }\n  coalesce (keys, defaultValue) {\n    return coalesce(this.data, keys, defaultValue)\n  }\n  empty (key) {\n    return this.executeUtil(key, empty(this.data, key))\n  }\n  insert (key, value, position) {\n    return this.executeUtil(key, insert(this.data, key, value, position))\n  }\n  push (key, ...values) {\n    return this.executeUtil(key, push(this.data, key, ...values))\n  }\n  unshift (key, ...values) {\n    return this.executeUtil(key, unshift(this.data, key, ...values))\n  }\n  pop (key) {\n    return this.executeUtil(key, pop(this.data, key))\n  }\n  shift (key) {\n    return this.executeUtil(key, shift(this.data, key))\n  }\n  splice (key, ...args) {\n    return this.executeUtil(key, splice(this.data, key, ...args))\n  }\n  sort (key, ...args) {\n    return this.executeUtil(key, sort(this.data, key, ...args))\n  }\n  ensureExists (key, defaultValue) {\n    return this.executeUtil(key, ensureExists(this.data, key, defaultValue))\n  }\n  delete (key) {\n    return this.executeUtil(key, del(this.data, key))\n  }\n  has (key) {\n    return has(this.data, key)\n  }\n  merge (key, data) {\n    return this.executeUtil(key, merge(this.data, key, data))\n  }\n  bind (options) {\n    const segment = new Segment({\n      keySeperator: this.keySeperator,\n      ...options\n    }, this, this.dataObserver)\n    this.segments.push(segment)\n    return segment.interface\n  }\n  destroy () {\n    this.segments.forEach((segment) => {\n      segment.destroy()\n    })\n    this.dataObserver.destroy()\n    this.data = {}\n  }\n}\nexport default Clearx\n"],"names":["module","isMergeableObject","value","stringValue","Object","prototype","toString","call","$$typeof","REACT_ELEMENT_TYPE","Symbol","for","cloneUnlessOtherwiseSpecified","options","clone","deepmerge","val","Array","isArray","defaultArrayMerge","target","source","concat","map","element","arrayMerge","destination","sourceIsArray","targetIsArray","sourceAndTargetTypesMatch","keys","forEach","key","all","array","Error","reduce","prev","next","factory","keyList","hasProp","hasOwnProperty","toNumber","isNaN","parseInt","assign","obj","hasEqual","freezeObject","freeze","obj1","obj2","undefined","equal","a","b","i","length","arrA","arrB","dateA","Date","dateB","getTime","regexpA","RegExp","regexpB","split","path","seperator","escape","let","l","charKey","push","get","defaultValue","remaining","set","dontReplace","isDataUpdated","const","arrayMethods","arrayOps","method","indexOf","arr","origLength","apply","args","splice","del","Segment","config","store","dataObserver","this","detachListeners","keySeperator","listeningKeys","bootstrap","active","attachListeners","dataChanges","listenDataChanges","onUnmount","listenUnmount","normalizePaths","paths","values","attachObserver","dataUpdated","bind","detachObserver","to","componentWillUnmount","this$1","destroy","prototypeAccessors","data","segment","assignState","initialAssignment","setState","state","events","afterUpdate","interface","DataObserver","listeners","counter","listener","id","dataUpdatedAt","changedKey","targets","changedPath","join","filter","keyPath","startsWith","ref","ex","console","log","Clearx","segments","triggerEvents","executeUtil","status","doNotReplace","coalesce","keysArr","empty","finalValue","insert","position","unshift","pop","shift","sort","ensureExists","delete","has","merge"],"mappings":"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"}