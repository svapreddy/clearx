{"version":3,"file":"clearx.js","sources":["../node_modules/nanoid/index.browser.js","../node_modules/deepmerge/dist/umd.js","../node_modules/fast-deep-equal/index.js","../src/object-utils.js","../src/segment-helper.js","../src/segment.js","../src/data-observer.js","../src/clearx.js"],"sourcesContent":["if (process.env.NODE_ENV !== 'production') {\n  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n      'If you don’t need unpredictable IDs, you can use `nanoid/non-secure`. ' +\n      'For secure ID install `expo-random` locally and use `nanoid/async`.'\n    )\n  }\n  if (typeof self === 'undefined' || (!self.crypto && !self.msCrypto)) {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n      'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\n\nvar crypto = self.crypto || self.msCrypto\n\n/*\n * This alphabet uses a-z A-Z 0-9 _- symbols.\n * Symbols order was changed for better gzip compression.\n */\nvar url = 'Uint8ArdomValuesObj012345679BCDEFGHIJKLMNPQRSTWXYZ_cfghkpqvwxyz-'\n\nmodule.exports = function (size) {\n  size = size || 21\n  var id = ''\n  var bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (0 < size--) {\n    id += url[bytes[size] & 63]\n  }\n  return id\n}\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.deepmerge = factory());\n}(this, (function () { 'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tObject.keys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tObject.keys(source).forEach(function(key) {\n\t\tif (!options.isMergeableObject(source[key]) || !target[key]) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = deepmerge(target[key], source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nreturn deepmerge_1;\n\n})));\n","'use strict';\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    var arrA = isArray(a)\n      , arrB = isArray(b)\n      , i\n      , length\n      , key;\n\n    if (arrA && arrB) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    if (arrA != arrB) return false;\n\n    var dateA = a instanceof Date\n      , dateB = b instanceof Date;\n    if (dateA != dateB) return false;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n\n    var regexpA = a instanceof RegExp\n      , regexpB = b instanceof RegExp;\n    if (regexpA != regexpB) return false;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n\n    var keys = keyList(a);\n    length = keys.length;\n\n    if (length !== keyList(b).length)\n      return false;\n\n    for (i = length; i-- !== 0;)\n      if (!hasProp.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      key = keys[i];\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  return a!==a && b!==b;\n};\n","import deepmerge from 'deepmerge'\nimport equal from 'fast-deep-equal'\n\nconst toNumber = (val) => {\n  if (!isNaN(val)) {\n    return parseInt(val, 10)\n  }\n  return val\n}\n\nconst assign = (obj, key, val) => {\n  if (hasEqual(obj[key], val)) return false\n  obj[key] = val\n  return obj[key] === val\n}\n\nexport const freezeObject = (obj) => {\n  if (Object.freeze) Object.freeze(obj)\n  return obj\n}\n\nexport const hasEqual = (obj1, obj2) => {\n  return obj1 !== undefined && equal(obj1, obj2)\n}\n\nexport const split = (path, seperator = '.', escape = '\\\\') => {\n  if (!path) return []\n  if (Array.isArray(path)) return path\n  const keys = []\n  let key = ''\n  for (let i = 0, l = path.length; i < l; ++i) {\n    const charKey = path[i]\n    if ((charKey === seperator) && (path[i - 1] !== escape)) {\n      if (key.length > 0) {\n        keys.push(toNumber(key))\n      }\n      key = ''\n    } else {\n      if (charKey !== escape) {\n        key += path[i]\n      }\n    }\n  }\n  if (key.length > 0) {\n    keys.push(toNumber(key))\n  }\n  return keys\n}\n\nexport const get = (obj, keys, defaultValue) => {\n  if (obj === undefined) return defaultValue\n  if (!keys || keys.length === 0) {\n    return obj\n  }\n  keys = split(keys)\n  let [key, ...remaining] = keys\n  if (!isNaN(key)) {\n    key *= 1\n  }\n  return get(obj[key], remaining, defaultValue)\n}\n\nexport const set = (obj, keys, value, dontReplace) => {\n  let isDataUpdated = false\n\n  if (obj === undefined) return [false, isDataUpdated]\n  if (!keys || keys.length === 0) return [false, isDataUpdated]\n\n  keys = split(keys)\n  const [key, next, ...remaining] = keys\n  if (next !== undefined) {\n    if (!obj.hasOwnProperty(key)) {\n      const val = !isNaN(next) ? [] : {}\n      isDataUpdated = assign(obj, key, val)\n    }\n    const [_, __] = set(obj[key], [next, ...remaining], value, dontReplace)\n    return [_, __ || isDataUpdated]\n  } else {\n    if (obj.hasOwnProperty(key) && dontReplace) return [true, isDataUpdated]\n    isDataUpdated = assign(obj, key, value)\n    return [true, isDataUpdated]\n  }\n}\n\nexport const has = (obj, keys) => {\n  const value = get(obj, keys)\n  if (value === undefined || value === null) return false\n  return true\n}\n\nexport const ensureExists = (obj, keys, value) => {\n  return set(obj, keys, value, true)\n}\n\nconst arrayMethods = ['push', 'pop', 'splice', 'shift', 'unshift', 'sort']\n\nexport const arrayOps = (obj, keys, method, ...args) => {\n  if (arrayMethods.indexOf(method) === -1) return false\n  let arr = get(obj, keys)\n  if (!Array.isArray(arr)) {\n    arr = []\n    set(obj, keys, arr)\n  }\n  try {\n    arr[method].apply(arr, args)\n  } catch (ex) {\n    // Probably freeze!\n  }\n  return [true, true]\n}\n\nexport const insert = (obj, keys, value, at) => {\n  return arrayOps(obj, keys, 'splice', at, 0, value)\n}\n\nexport const push = (obj, keys, ...values) => {\n  return arrayOps(obj, keys, 'push', ...values)\n}\n\nexport const unshift = (obj, keys, ...args) => {\n  return arrayOps(obj, keys, 'unshift', ...args)\n}\n\nexport const pop = (obj, keys) => {\n  return arrayOps(obj, keys, 'pop')\n}\n\nexport const shift = (obj, keys) => {\n  return arrayOps(obj, keys, 'shift')\n}\n\nexport const splice = (obj, keys, ...args) => {\n  return arrayOps(obj, keys, 'splice', ...args)\n}\n\nexport const sort = (obj, keys, ...args) => {\n  return arrayOps(obj, keys, 'sort', ...args)\n}\n\nexport const increment = (obj, keys, by = 1) => {\n  let val = parseInt(get(obj, keys), 10)\n  if (isNaN(val)) {\n    val = 0\n  } else {\n    val += by\n  }\n  return set(obj, keys, val)\n}\n\nexport const decrement = (obj, keys, by = 1) => {\n  return increment(obj, keys, by * -1)\n}\n\nexport const toggle = (obj, keys) => {\n  const existing = !!get(obj, keys)\n  return set(obj, keys, !existing)\n}\n\nexport const empty = (obj, keys) => {\n  let isDataUpdated = false\n  const value = get(obj, keys)\n  if (value === undefined) return [true, isDataUpdated]\n  let finalValue\n  switch (true) {\n    case typeof value === 'string':\n      finalValue = ''\n      break\n    case typeof value === 'number':\n      finalValue = 0\n      break\n    case typeof value === 'boolean':\n      finalValue = false\n      break\n    case Array.isArray(value):\n      value.length = 0\n      break\n    case typeof value === 'object':\n      for (const i in value) {\n        if (value.hasOwnProperty(i)) {\n          isDataUpdated = delete value[i] || isDataUpdated\n        }\n      }\n      return [true, isDataUpdated]\n  }\n  return set(obj, keys, finalValue)\n}\n\nexport const coalesce = (obj, keysArr, defaultValue) => {\n  for (let i = 0, l = keysArr.length; i < l; ++i) {\n    const val = get(obj, keysArr[i])\n    if (val !== undefined) {\n      return val\n    }\n  }\n  return defaultValue\n}\n\nexport const del = (obj, keys) => {\n  let isDataUpdated = false\n  if (obj === undefined) return [false, isDataUpdated]\n  if (!keys || keys.length === 0) return [false, isDataUpdated]\n  keys = split(keys)\n  const [key, ...remaining] = keys\n  if (keys.length === 1) {\n    if (Array.isArray(obj) && !isNaN(key)) {\n      const len = obj.length\n      obj.splice(key, 1)\n      isDataUpdated = len !== obj.length\n    } else if (obj.hasOwnProperty(key)) {\n      isDataUpdated = delete obj[key]\n    }\n    return [true, isDataUpdated]\n  } else {\n    return del(obj[key], [...remaining])\n  }\n}\n\nexport const merge = (obj, keys, data) => {\n  return set(obj, keys, deepmerge(get(obj, keys), data))\n}\n","import { split, freezeObject } from './object-utils'\nimport deepmerge from 'deepmerge'\n\nclass SegmentHelper {\n  constructor (paths, keySeperator = '.', store, dataObserver) {\n    this.paths = paths\n    this.keySeperator = keySeperator\n    this.store = store\n    this.dataObserver = dataObserver\n    this.components = []\n    this.afterUpdateEvents = []\n  }\n\n  get keys () {\n    const paths = this.paths\n    if (Array.isArray(paths)) return paths\n    let keys = []\n    if (typeof paths === 'string') {\n      keys = [split(paths, this.keySeperator)]\n    } else if (paths.toString() === '[object Object]') {\n      for (const key in paths) {\n        if (!paths.hasOwnProperty(key)) continue\n        keys.push(split(paths[key], this.keySeperator))\n      }\n    } else {\n      return paths\n    }\n    return keys\n  }\n\n  observe () {\n    if (this.components.length === 0) return\n    if (this.cancelObserver) return\n\n    const observer = this.dataObserver\n    const keys = this.keys\n    const listener = this.updateComponents.bind(this)\n    this.cancelDataListener = observer.attachObserver(keys, listener)\n  }\n\n  unobserve () {\n    if (!this.cancelDataListener) return\n    this.cancelDataListener()\n    delete this.cancelDataListener\n  }\n\n  listenUnmount (component, onUnmount) {\n    if (Array.isArray(component)) return () => {}\n    const componentWillUnmount = component.componentWillUnmount\n    component.componentWillUnmount = () => {\n      onUnmount()\n      if (typeof this.componentWillUnmount === 'function') {\n        this.componentWillUnmount.call(component)\n      }\n    }\n    component.componentWillUnmount.__original = componentWillUnmount\n  }\n\n  unlistenUnmount (component) {\n    const componentWillUnmount = component.componentWillUnmount\n    if (!componentWillUnmount) return\n    const original = component.componentWillUnmount.__original\n    if (!original) return\n    component.componentWillUnmount = original\n  }\n\n  updateData () {\n    let data = {}\n    let paths = this.paths\n\n    if (typeof paths === 'string') {\n      paths = split(paths, this.keySeperator)\n      data = this.store.get(paths)\n    } else if (Array.isArray(paths)) {\n      data = paths.map((path) => {\n        const key = split(path, this.keySeperator)\n        return this.store.get(key)\n      })\n    } else {\n      for (const key in paths) {\n        const path = split(paths[key], this.keySeperator)\n        data[key] = this.store.get(path)\n      }\n    }\n\n    if (typeof data === 'object') {\n      data = freezeObject(deepmerge({}, data))\n    }\n\n    this.data = data\n  }\n\n  updateComponents () {\n    this.updateData()\n    this.components.forEach((component) => {\n      this.assignState(component)\n    })\n    this.executeAfterUpdate()\n  }\n\n  assignStateFC (component, initialAssignment) {\n    let setState\n    if (Array.isArray(component)) {\n      setState = component[1]\n    }\n    if (!setState) return\n    if (initialAssignment) return true\n    setState(this.data)\n    component[0] = this.data\n    return true\n  }\n\n  assignStateCC (component, initialAssignment) {\n    if (typeof component.setState !== 'function') return\n    if (initialAssignment) {\n      component.state = component.state || {}\n      component.state.store = this.data\n    } else {\n      component.setState({\n        store: this.data\n      })\n    }\n    return true\n  }\n\n  assignStateOthers (component) {\n    if (typeof component === 'object') {\n      component.data = this.data\n    }\n  }\n\n  assignState (component, initial = false) {\n    const updatedSC = this.assignStateFC(component, initial)\n    const updatedCC = this.assignStateCC(component, initial)\n    if (!updatedSC && !updatedCC) {\n      this.assignStateOthers(component, initial)\n    }\n  }\n\n  executeAfterUpdate () {\n    this.afterUpdateEvents.forEach((func) => {\n      try {\n        func(this.data)\n      } catch (ex) {\n        console.log(ex)\n      }\n    })\n  }\n\n  addMark (component, mark) {\n    let comp = component\n    if (Array.isArray(component)) {\n      comp = component[1]\n    }\n    comp.__segment = mark\n  }\n\n  removeMark (component) {\n    let comp = component\n    if (Array.isArray(component)) {\n      comp = component[1]\n    }\n    delete comp.__segment\n  }\n}\n\nexport default SegmentHelper\n","import nanoid from 'nanoid'\nimport SegmentHelper from './segment-helper'\n\nclass Segment {\n  constructor (paths, id, keySeperator, store, dataObserver) {\n    this.id = id || nanoid()\n    this.paths = paths\n\n    this._helper = new SegmentHelper(paths, keySeperator, store, dataObserver)\n\n    this.keySeperator = keySeperator\n    this.store = store\n    this.dataObserver = dataObserver\n    this.dataTransformers = []\n  }\n\n  dataTransformer (func) {\n    if (typeof func === 'function') this.dataTransformers.push(func)\n  }\n\n  findComponent (search) {\n    if (Array.isArray(search)) {\n      search = search[1]\n    }\n    const components = this._helper.components\n    for (let i = 0; i < components.length; i++) {\n      let component = components[i]\n      if (Array.isArray(component)) {\n        component = component[1]\n      }\n      if (search === component) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  linkComponent (component) {\n    if (!component) return\n    const helper = this._helper\n    const unlinkComponent = this.unlinkComponent.bind(this, component)\n    const retObject = {\n      data: this.data,\n      unlinkComponent\n    }\n    if (this.findComponent(component) > -1) return retObject\n    helper.components.push(component)\n    helper.observe()\n    helper.addMark(component, this)\n    helper.listenUnmount(component, unlinkComponent)\n    helper.assignState(component, true)\n    return retObject\n  }\n\n  get data () {\n    const helper = this._helper\n    if (!helper.data) {\n      helper.updateData()\n    }\n    return helper.data\n  }\n\n  get components () {\n    return this._helper.components.slice(0)\n  }\n\n  get afterUpdateEvents () {\n    return this._helper.afterUpdateEvents.slice(0)\n  }\n\n  unlinkComponent (component) {\n    if (!component) return\n    const helper = this._helper\n    const idx = this.findComponent(component)\n    if (idx > -1) {\n      helper.removeMark(component)\n      helper.components.splice(idx, 1)\n      helper.unlistenUnmount(component)\n    }\n    if (helper.components.length === 0) {\n      helper.unobserve()\n    }\n  }\n\n  onUpdate (func) {\n    if (typeof func === 'function') {\n      this._helper.afterUpdateEvents.push(func)\n    }\n  }\n\n  teardown () {\n    delete this._helper\n    delete this.dataObserver\n  }\n}\n\nexport default Segment\n","import { split } from './object-utils'\nclass DataObserver {\n  constructor (store) {\n    this.store = store\n    this.listeners = {}\n    this.counter = 0\n  }\n\n  attachObserver (keys, listener) {\n    if (!listener) return\n    if (!keys || keys.length === 0) return\n    ++this.counter\n    const id = `data-slice:${this.counter}`\n    this.listeners[id] = {\n      keys,\n      listener\n    }\n    return () => {\n      delete this.listeners[id]\n    }\n  }\n\n  dataUpdatedAt (changedKey) {\n    const seperator = '>>'\n    const targets = []\n    const changedPath = split(changedKey).join(seperator)\n    for (const id in this.listeners) {\n      let { keys, listener } = this.listeners[id]\n      keys = keys.filter((key) => {\n        const keyPath = split(key).join(seperator)\n        return keyPath.startsWith(changedPath) || changedPath.startsWith(keyPath)\n      })\n      if (keys.length > 0) targets.push([keys, listener])\n    }\n    targets.forEach(([keys, listener]) => {\n      try {\n        listener(keys)\n      } catch (ex) {\n        console.log('Error updating', listener, keys)\n      }\n    })\n  }\n\n  teardown () {\n    this.listeners = {}\n  }\n}\nexport default DataObserver\n","import Segment from './segment'\nimport DataObserver from './data-observer'\nimport { sort, get, set, coalesce, empty, insert, push, pop, shift, splice, unshift, ensureExists, del, has, merge, increment, decrement, toggle } from './object-utils'\n\nclass Clearx {\n  constructor (data, { keySeperator = '.' } = {}) {\n    this.data = data\n    this.segments = []\n    this.dataObserver = new DataObserver(this)\n    this.keySeperator = keySeperator\n  }\n\n  triggerEvents (key) {\n    this.dataObserver.dataUpdatedAt(key)\n  }\n\n  executeUtil (key, [status, changed]) {\n    if (changed) this.triggerEvents(key)\n    return status\n  }\n\n  get (key, defaultValue) {\n    return get(this.data, key, defaultValue)\n  }\n\n  set (key, value, doNotReplace = false) {\n    return this.executeUtil(key, set(this.data, key, value, doNotReplace))\n  }\n\n  coalesce (keys, defaultValue) {\n    return coalesce(this.data, keys, defaultValue)\n  }\n\n  empty (key) {\n    return this.executeUtil(key, empty(this.data, key))\n  }\n\n  insert (key, value, position) {\n    return this.executeUtil(key, insert(this.data, key, value, position))\n  }\n\n  push (key, ...values) {\n    return this.executeUtil(key, push(this.data, key, ...values))\n  }\n\n  unshift (key, ...values) {\n    return this.executeUtil(key, unshift(this.data, key, ...values))\n  }\n\n  pop (key) {\n    return this.executeUtil(key, pop(this.data, key))\n  }\n\n  shift (key) {\n    return this.executeUtil(key, shift(this.data, key))\n  }\n\n  splice (key, ...args) {\n    return this.executeUtil(key, splice(this.data, key, ...args))\n  }\n\n  sort (key, ...args) {\n    return this.executeUtil(key, sort(this.data, key, ...args))\n  }\n\n  ensureExists (key, defaultValue) {\n    return this.executeUtil(key, ensureExists(this.data, key, defaultValue))\n  }\n\n  delete (key) {\n    return this.executeUtil(key, del(this.data, key))\n  }\n\n  has (key) {\n    return has(this.data, key)\n  }\n\n  merge (key, data) {\n    return this.executeUtil(key, merge(this.data, key, data))\n  }\n\n  increment (key, by) {\n    return this.executeUtil(key, increment(this.data, key, by))\n  }\n\n  decrement (key, by) {\n    return this.executeUtil(key, decrement(this.data, key, by))\n  }\n\n  toggle (key) {\n    return this.executeUtil(key, toggle(this.data, key))\n  }\n\n  paths (keys, id, keySeperator) {\n    const segment = new Segment(keys, id, keySeperator || this.keySeperator, this, this.dataObserver)\n    this.segments.push(segment)\n    return segment\n  }\n\n  bind (options = {}) {\n    const { to, afterUpdate, id, keySeperator, paths } = options\n    let component = to\n    if (Array.isArray(component)) {\n      component = to[1]\n    }\n    let segment\n    segment = component.__segment\n    if (segment) {\n      return segment.linkComponent(to)\n    }\n    segment = this.paths(paths, id, keySeperator)\n    segment.onUpdate(afterUpdate)\n    const link = segment.linkComponent(to)\n\n    if (Array.isArray(to)) {\n      return link\n    }\n    return segment\n  }\n\n  destroySegment (segment) {\n    const index = this.segments.indexOf(segment)\n    if (index > -1) this.segments.splice(index, 1)\n  }\n\n  destroy () {\n    this.segments.forEach((segment) => {\n      segment.teardown()\n    })\n    this.dataObserver.teardown()\n    this.data = {}\n  }\n}\nexport default Clearx\n"],"names":["process","env","NODE_ENV","navigator","product","Error","self","crypto","msCrypto","module","isMergeableObject","value","isNonNullObject","stringValue","Object","prototype","toString","call","$$typeof","REACT_ELEMENT_TYPE","isReactElement","isSpecial","Symbol","for","cloneUnlessOtherwiseSpecified","options","clone","deepmerge","val","Array","isArray","defaultArrayMerge","target","source","concat","map","element","arrayMerge","sourceIsArray","destination","keys","forEach","key","mergeObject","all","array","reduce","prev","next","factory","keyList","hasProp","hasOwnProperty","toNumber","isNaN","parseInt","assign","obj","hasEqual","obj1","obj2","undefined","equal","a","b","i","length","arrA","arrB","dateA","Date","dateB","getTime","regexpA","RegExp","regexpB","split","path","seperator","escape","const","l","charKey","push","get","defaultValue","remaining","set","dontReplace","let","isDataUpdated","arrayMethods","arrayOps","method","indexOf","arr","apply","args","ex","values","unshift","splice","sort","increment","by","del","len","SegmentHelper","paths","keySeperator","store","dataObserver","this","components","afterUpdateEvents","prototypeAccessors","observe","cancelObserver","observer","listener","updateComponents","bind","cancelDataListener","attachObserver","unobserve","listenUnmount","component","onUnmount","componentWillUnmount","__original","unlistenUnmount","original","updateData","data","freeze","assignState","executeAfterUpdate","assignStateFC","initialAssignment","setState","assignStateCC","state","assignStateOthers","initial","updatedSC","updatedCC","func","console","log","addMark","mark","comp","__segment","removeMark","Segment","id","size","bytes","getRandomValues","Uint8Array","nanoid","_helper","dataTransformers","dataTransformer","findComponent","search","linkComponent","helper","unlinkComponent","retObject","slice","idx","onUpdate","teardown","DataObserver","listeners","counter","dataUpdatedAt","changedKey","targets","changedPath","join","filter","keyPath","startsWith","ref","Clearx","segments","triggerEvents","executeUtil","status","doNotReplace","coalesce","keysArr","empty","finalValue","insert","position","at","pop","shift","ensureExists","delete","has","merge","decrement","toggle","existing","segment","to","afterUpdate","link","destroySegment","index","destroy"],"mappings":"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"}