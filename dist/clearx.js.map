{"version":3,"file":"clearx.js","sources":["../node_modules/nanoid/index.browser.js","../node_modules/deepmerge/dist/umd.js","../node_modules/fast-deep-equal/index.js","../src/object-utils.js","../src/segment-helper.js","../src/segment.js","../src/data-observer.js","../src/clearx.js"],"sourcesContent":["if (process.env.NODE_ENV !== 'production') {\n  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n      'If you don’t need unpredictable IDs, you can use `nanoid/non-secure`. ' +\n      'For secure ID install `expo-random` locally and use `nanoid/async`.'\n    )\n  }\n  if (typeof self === 'undefined' || (!self.crypto && !self.msCrypto)) {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n      'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\n\nvar crypto = self.crypto || self.msCrypto\n\n/*\n * This alphabet uses a-z A-Z 0-9 _- symbols.\n * Symbols order was changed for better gzip compression.\n */\nvar url = 'Uint8ArdomValuesObj012345679BCDEFGHIJKLMNPQRSTWXYZ_cfghkpqvwxyz-'\n\nmodule.exports = function (size) {\n  size = size || 21\n  var id = ''\n  var bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (0 < size--) {\n    id += url[bytes[size] & 63]\n  }\n  return id\n}\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.deepmerge = factory());\n}(this, (function () { 'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tObject.keys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tObject.keys(source).forEach(function(key) {\n\t\tif (!options.isMergeableObject(source[key]) || !target[key]) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = deepmerge(target[key], source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nreturn deepmerge_1;\n\n})));\n","'use strict';\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    var arrA = isArray(a)\n      , arrB = isArray(b)\n      , i\n      , length\n      , key;\n\n    if (arrA && arrB) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    if (arrA != arrB) return false;\n\n    var dateA = a instanceof Date\n      , dateB = b instanceof Date;\n    if (dateA != dateB) return false;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n\n    var regexpA = a instanceof RegExp\n      , regexpB = b instanceof RegExp;\n    if (regexpA != regexpB) return false;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n\n    var keys = keyList(a);\n    length = keys.length;\n\n    if (length !== keyList(b).length)\n      return false;\n\n    for (i = length; i-- !== 0;)\n      if (!hasProp.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      key = keys[i];\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  return a!==a && b!==b;\n};\n","import deepmerge from 'deepmerge'\nimport equal from 'fast-deep-equal'\n\nconst toNumber = (val) => {\n  if (!isNaN(val)) {\n    return val * 1\n  }\n  return val\n}\n\nconst assign = (obj, key, val) => {\n  if (hasEqual(obj[key], val)) return false\n  obj[key] = val\n  return obj[key] === val\n}\n\nexport const freezeObject = (obj) => {\n  if (Object.freeze) Object.freeze(obj)\n  return obj\n}\n\nexport const hasEqual = (obj1, obj2) => {\n  return obj1 !== undefined && equal(obj1, obj2)\n}\n\nexport const split = (path, seperator = '.', escape = '\\\\') => {\n  if (!path) return []\n  if (Array.isArray(path)) return path\n  const keys = []\n  let key = ''\n  for (let i = 0, l = path.length; i < l; ++i) {\n    const charKey = path[i]\n    if ((charKey === seperator) && (path[i - 1] !== escape)) {\n      if (key.length > 0) {\n        keys.push(toNumber(key))\n      }\n      key = ''\n    } else {\n      if (charKey !== escape) {\n        key += path[i]\n      }\n    }\n  }\n  if (key.length > 0) {\n    keys.push(toNumber(key))\n  }\n  return keys\n}\n\nexport const get = (obj, keys, defaultValue) => {\n  if (obj === undefined) return defaultValue\n  if (!keys || keys.length === 0) {\n    return obj\n  }\n  keys = split(keys)\n  let [key, ...remaining] = keys\n  if (!isNaN(key)) {\n    key *= 1\n  }\n  return get(obj[key], remaining, defaultValue)\n}\n\nexport const set = (obj, keys, value, dontReplace) => {\n  let isDataUpdated = false\n\n  if (obj === undefined) return [false, isDataUpdated]\n  if (!keys || keys.length === 0) return [false, isDataUpdated]\n\n  keys = split(keys)\n  const [key, next, ...remaining] = keys\n  if (next !== undefined) {\n    if (!obj.hasOwnProperty(key)) {\n      const val = !isNaN(next) ? [] : {}\n      isDataUpdated = assign(obj, key, val)\n    }\n    const [_, __] = set(obj[key], [next, ...remaining], value, dontReplace)\n    return [_, __ || isDataUpdated]\n  } else {\n    if (obj.hasOwnProperty(key) && dontReplace) return [true, isDataUpdated]\n    isDataUpdated = assign(obj, key, value)\n    return [true, isDataUpdated]\n  }\n}\n\nexport const has = (obj, keys) => {\n  const value = get(obj, keys)\n  if (value === undefined) return false\n  return true\n}\n\nexport const ensureExists = (obj, keys, value = null) => {\n  return set(obj, keys, value, true)\n}\n\nconst arrayMethods = ['push', 'pop', 'splice', 'shift', 'unshift', 'sort', 'slice']\n\nexport const arrayOps = (obj, keys, method, ...args) => {\n  if (arrayMethods.indexOf(method) === -1) return false\n  let arr = get(obj, keys)\n  if (!Array.isArray(arr)) {\n    arr = []\n    set(obj, keys, arr)\n  }\n  let val\n  try {\n    val = arr[method].apply(arr, args)\n  } catch (ex) {\n    // Probably freeze!\n  }\n  return [true, true, val]\n}\n\nexport const push = (obj, keys, ...values) => {\n  return arrayOps(obj, keys, 'push', ...values)\n}\n\nexport const insert = (obj, keys, value, at) => {\n  if (at === undefined) {\n    return push(obj, keys, value)\n  }\n  return arrayOps(obj, keys, 'splice', at, 0, value)\n}\n\nexport const unshift = (obj, keys, ...args) => {\n  return arrayOps(obj, keys, 'unshift', ...args)\n}\n\nexport const pop = (obj, keys) => {\n  return arrayOps(obj, keys, 'pop')\n}\n\nexport const shift = (obj, keys) => {\n  return arrayOps(obj, keys, 'shift')\n}\n\nexport const splice = (obj, keys, ...args) => {\n  return arrayOps(obj, keys, 'splice', ...args)\n}\n\nexport const slice = (obj, keys, ...args) => {\n  const result = arrayOps(obj, keys, 'slice', ...args)\n  return result[2]\n}\n\nexport const sort = (obj, keys, ...args) => {\n  return arrayOps(obj, keys, 'sort', ...args)\n}\n\nexport const increment = (obj, keys, by = 1) => {\n  let val = get(obj, keys) * 1\n  if (isNaN(val)) {\n    val = 0\n  }\n  val += by\n  return set(obj, keys, val)\n}\n\nexport const decrement = (obj, keys, by = 1) => {\n  return increment(obj, keys, by * -1)\n}\n\nexport const toggle = (obj, keys) => {\n  const existing = !!get(obj, keys)\n  return set(obj, keys, !existing)\n}\n\nexport const empty = (obj, keys) => {\n  let isDataUpdated = false\n  const value = get(obj, keys)\n  if (value === undefined) return [true, isDataUpdated]\n  let finalValue\n  switch (true) {\n    case typeof value === 'string':\n      finalValue = ''\n      break\n    case typeof value === 'number':\n      finalValue = 0\n      break\n    case typeof value === 'boolean':\n      finalValue = false\n      break\n    case Array.isArray(value):\n      value.length = 0\n      return [true, value.length === 0]\n    case typeof value === 'object':\n      for (const i in value) {\n        if (value.hasOwnProperty(i)) {\n          isDataUpdated = delete value[i] || isDataUpdated\n        }\n      }\n      return [true, isDataUpdated]\n  }\n  return set(obj, keys, finalValue)\n}\n\nexport const coalesce = (obj, keysArr, defaultValue) => {\n  for (let i = 0, l = keysArr.length; i < l; ++i) {\n    const val = get(obj, keysArr[i])\n    if (val !== undefined && val !== null) {\n      return val\n    }\n  }\n  return defaultValue\n}\n\nexport const del = (obj, keys) => {\n  let isDataUpdated = false\n  if (obj === undefined) return [false, isDataUpdated]\n  if (!keys || keys.length === 0) return [false, isDataUpdated]\n  keys = split(keys)\n  const [key, ...remaining] = keys\n  if (keys.length === 1) {\n    if (Array.isArray(obj) && !isNaN(key)) {\n      const len = obj.length\n      obj.splice(key, 1)\n      isDataUpdated = len !== obj.length\n    } else if (obj.hasOwnProperty(key)) {\n      isDataUpdated = delete obj[key]\n    }\n    return [true, isDataUpdated]\n  } else {\n    return del(obj[key], [...remaining])\n  }\n}\n\nexport const merge = (obj, keys, data) => {\n  ensureExists(obj, keys, Array.isArray(data) ? [] : {})\n  const current = get(obj, keys)\n  const merged = deepmerge(current, data)\n  return set(obj, keys, merged)\n}\n\nexport const isEqual = (obj, keys, data) => {\n  const current = get(obj, keys)\n  return equal(current, data)\n}\n","import { split, freezeObject } from './object-utils'\nimport deepmerge from 'deepmerge'\n\nclass SegmentHelper {\n  constructor (paths, delimiter = '.', store, dataObserver) {\n    this.paths = paths\n    this.delimiter = delimiter\n    this.store = store\n    this.dataObserver = dataObserver\n    this.components = []\n    this._afterUpdateEvents = []\n    this._dataTransformers = []\n  }\n\n  get keys () {\n    const paths = this.paths\n    if (Array.isArray(paths)) return paths\n    let keys = []\n    if (typeof paths === 'string') {\n      keys = [split(paths, this.delimiter)]\n    } else if (paths.toString() === '[object Object]') {\n      for (const key in paths) {\n        if (!paths.hasOwnProperty(key)) continue\n        keys.push(split(paths[key], this.delimiter))\n      }\n    } else {\n      return paths\n    }\n    return keys\n  }\n\n  observe (force) {\n    if (this.components.length === 0 && !force) return\n    if (this.cancelObserver) return\n\n    const observer = this.dataObserver\n    const keys = this.keys\n    const listener = this.updateComponents.bind(this)\n    this.cancelDataListener = observer.attachObserver(keys, listener)\n  }\n\n  unobserve () {\n    if (!this.cancelDataListener) return\n    this.cancelDataListener()\n    delete this.cancelDataListener\n  }\n\n  listenUnmount (component, onUnmount) {\n    if (Array.isArray(component)) return () => {}\n    const componentWillUnmount = component.componentWillUnmount\n    component.componentWillUnmount = () => {\n      onUnmount()\n      if (typeof this.componentWillUnmount === 'function') {\n        this.componentWillUnmount.call(component)\n      }\n    }\n    component.componentWillUnmount.__original = componentWillUnmount\n  }\n\n  unlistenUnmount (component) {\n    const componentWillUnmount = component.componentWillUnmount\n    if (!componentWillUnmount) return\n    const original = component.componentWillUnmount.__original\n    if (!original) return\n    component.componentWillUnmount = original\n  }\n\n  dataTransformer (func) {\n    if (typeof func === 'function') {\n      this._dataTransformers.push(func)\n      this.updateComponents()\n    }\n  }\n\n  get dataTransformers () {\n    return this._dataTransformers.slice(0)\n  }\n\n  applyDataTransformers (data) {\n    this._dataTransformers.forEach((func) => {\n      try {\n        data = func(data)\n      } catch (ex) {\n        console.log(func, 'failing to transform', data)\n      }\n    })\n    return data\n  }\n\n  updateData () {\n    let data = {}\n    let paths = this.paths\n\n    if (typeof paths === 'string') {\n      paths = split(paths, this.delimiter)\n      data = this.store.get(paths)\n    } else if (Array.isArray(paths)) {\n      data = paths.map((path) => {\n        const key = split(path, this.delimiter)\n        return this.store.get(key)\n      })\n    } else {\n      for (const key in paths) {\n        const path = split(paths[key], this.delimiter)\n        data[key] = this.store.get(path)\n      }\n    }\n\n    data = this.applyDataTransformers(data)\n\n    if (typeof data === 'object') {\n      data = freezeObject(deepmerge({}, data))\n    }\n\n    this._data = data\n  }\n\n  get data () {\n    if (!this._data) {\n      this.updateData()\n    }\n    return this._data\n  }\n\n  updateComponents () {\n    this.updateData()\n    this.components.forEach((component) => {\n      this.assignState(component)\n    })\n    this.executeAfterUpdate()\n  }\n\n  assignStateFC (component, initialAssignment) {\n    let setState\n    if (Array.isArray(component)) {\n      setState = component[1]\n    }\n    if (!setState) return\n    if (initialAssignment) return true\n    component[0] = this._data\n    setState(this._data)\n    return true\n  }\n\n  assignStateCC (component, initialAssignment) {\n    if (typeof component.setState !== 'function') return\n    if (initialAssignment) {\n      component.state = component.state || {}\n      component.state.store = this.data\n    } else {\n      component.setState({\n        store: this.data\n      })\n    }\n    return true\n  }\n\n  assignStateOthers (component) {\n    if (typeof component === 'object') {\n      component.data = this.data\n    }\n  }\n\n  assignState (component, initial = false) {\n    const updatedSC = this.assignStateFC(component, initial)\n    const updatedCC = this.assignStateCC(component, initial)\n    if (!updatedSC && !updatedCC) {\n      this.assignStateOthers(component, initial)\n    }\n  }\n\n  onUpdate (func) {\n    if (typeof func === 'function') {\n      this._afterUpdateEvents.push(func)\n    }\n  }\n\n  get afterUpdateEvents () {\n    return this._afterUpdateEvents.slice(0)\n  }\n\n  executeAfterUpdate () {\n    this._afterUpdateEvents.forEach((func) => {\n      try {\n        func(this.data)\n      } catch (ex) {\n        console.log(ex)\n      }\n    })\n  }\n\n  get hasDataListener () {\n    return !!this.cancelDataListener\n  }\n\n  addMark (component, mark) {\n    let comp = component\n    if (Array.isArray(component)) {\n      comp = component[1]\n    }\n    comp.__segment = mark\n  }\n\n  removeMark (component) {\n    let comp = component\n    if (Array.isArray(component)) {\n      comp = component[1]\n    }\n    delete comp.__segment\n  }\n}\n\nexport default SegmentHelper\n","import nanoid from 'nanoid'\nimport SegmentHelper from './segment-helper'\n\nclass Segment {\n  constructor (paths, id, delimiter, store, dataObserver) {\n    this.id = id || nanoid()\n    this.paths = paths\n\n    this._helper = new SegmentHelper(paths, delimiter, store, dataObserver)\n\n    this.delimiter = delimiter\n    this.store = store\n    this.dataObserver = dataObserver\n  }\n\n  findComponent (search) {\n    if (!this._helper) return -1\n    if (Array.isArray(search)) {\n      search = search[1]\n    }\n    const components = this._helper.components\n    for (let i = 0; i < components.length; i++) {\n      let component = components[i]\n      if (Array.isArray(component)) {\n        component = component[1]\n      }\n      if (search === component) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  get data () {\n    if (!this._helper) return {}\n    return this._helper.data\n  }\n\n  get components () {\n    if (!this._helper) return []\n    return this._helper.components.slice(0)\n  }\n\n  get active () {\n    if (!this._helper) return false\n    return this._helper.hasDataListener\n  }\n\n  get afterUpdateEvents () {\n    if (!this._helper) return []\n    return this._helper.afterUpdateEvents\n  }\n\n  get dataTransformers () {\n    if (!this._helper) return []\n    return this._helper.dataTransformers\n  }\n\n  link (component) {\n    if (!component) return {}\n    const helper = this._helper\n    if (!helper) return {}\n    const store = this.store\n    const unlink = store._unlinkComponentFromAllSegments.bind(store, component)\n    const result = [ this.data, unlink ]\n    if (this.findComponent(component) > -1) return result\n    helper.components.push(component)\n    helper.observe(this.keepSyncing)\n    helper.addMark(component, this)\n    helper.listenUnmount(component, unlink)\n    helper.assignState(component, true)\n    return result\n  }\n\n  unlink (component) {\n    if (!component) return\n    const helper = this._helper\n    if (!helper) return\n    const idx = this.findComponent(component)\n    if (idx > -1) {\n      helper.removeMark(component)\n      helper.components.splice(idx, 1)\n      helper.unlistenUnmount(component)\n    }\n    if ((helper.components.length === 0) && !this.keepSyncing) {\n      helper.unobserve()\n    }\n  }\n\n  sync (on = true) {\n    if (!this._helper) return false\n    this.keepSyncing = on\n    if (on && !this.active) {\n      this._helper.observe(true)\n    }\n    if (!on && this.active) {\n      this._helper.unobserve()\n    }\n    return true\n  }\n\n  unlinkAll () {\n    if (!this._helper) return\n    this._helper.components.forEach(this.unlink.bind(this))\n  }\n\n  onUpdate (func) {\n    if (!this._helper) return\n    this._helper.onUpdate(func)\n  }\n\n  dataTransformer (func) {\n    if (!this._helper) return\n    this._helper.dataTransformer(func)\n  }\n\n  teardown () {\n    if (!this._helper) return true\n    this.unlinkAll()\n    this._helper.unobserve()\n    delete this._helper\n    delete this.dataObserver\n    this.store.removeSegment(this)\n    return true\n  }\n}\n\nexport default Segment\n","import { split } from './object-utils'\nclass DataObserver {\n  constructor (store) {\n    this.store = store\n    this.listeners = {}\n    this.counter = 0\n  }\n\n  attachObserver (keys, listener) {\n    if (!listener) return\n    if (!keys || keys.length === 0) return\n    ++this.counter\n    const id = `data-slice:${this.counter}`\n    this.listeners[id] = {\n      keys,\n      listener\n    }\n    return () => {\n      delete this.listeners[id]\n    }\n  }\n\n  dataUpdatedAt (changedKey) {\n    const seperator = '>>'\n    const targets = []\n    const changedPath = split(changedKey).join(seperator)\n    for (const id in this.listeners) {\n      let { keys, listener } = this.listeners[id]\n      keys = keys.filter((key) => {\n        const keyPath = split(key).join(seperator)\n        return keyPath.startsWith(changedPath) || changedPath.startsWith(keyPath)\n      })\n      if (keys.length > 0) targets.push([keys, listener])\n    }\n    targets.forEach(([keys, listener]) => {\n      try {\n        listener(keys)\n      } catch (ex) {\n        console.log('Error updating', listener, keys)\n      }\n    })\n  }\n\n  teardown () {\n    this.listeners = {}\n  }\n}\nexport default DataObserver\n","import Segment from './segment'\nimport DataObserver from './data-observer'\nimport { sort, get, set, coalesce, empty, insert, push, pop, shift, splice, unshift, ensureExists, del, has, merge, increment, decrement, toggle, isEqual, slice } from './object-utils'\n\nclass Clearx {\n  constructor (data, { delimiter = '.' } = {}) {\n    this.data = data\n    this.segments = []\n    this.dataObserver = new DataObserver(this)\n    this.delimiter = delimiter\n    this.onUpdateEvents = []\n  }\n\n  triggerEvents (key) {\n    this.dataObserver.dataUpdatedAt(key)\n  }\n\n  executeUtil (key, [status, changed]) {\n    if (changed) {\n      this.triggerEvents(key)\n    }\n    this.executeOnUpdateEvents(changed, key)\n    return status\n  }\n\n  get (key, defaultValue) {\n    return get(this.data, key, defaultValue)\n  }\n\n  set (key, value, doNotReplace = false) {\n    return this.executeUtil(key, set(this.data, key, value, doNotReplace))\n  }\n\n  coalesce (keys, defaultValue) {\n    return coalesce(this.data, keys, defaultValue)\n  }\n\n  empty (key) {\n    return this.executeUtil(key, empty(this.data, key))\n  }\n\n  insert (key, value, position) {\n    return this.executeUtil(key, insert(this.data, key, value, position))\n  }\n\n  push (key, ...values) {\n    return this.executeUtil(key, push(this.data, key, ...values))\n  }\n\n  unshift (key, ...values) {\n    return this.executeUtil(key, unshift(this.data, key, ...values))\n  }\n\n  pop (key) {\n    return this.executeUtil(key, pop(this.data, key))\n  }\n\n  shift (key) {\n    return this.executeUtil(key, shift(this.data, key))\n  }\n\n  splice (key, ...args) {\n    return this.executeUtil(key, splice(this.data, key, ...args))\n  }\n\n  slice (key, ...args) {\n    return slice(this.data, key, ...args)\n  }\n\n  sort (key, ...args) {\n    return this.executeUtil(key, sort(this.data, key, ...args))\n  }\n\n  ensureExists (key, defaultValue) {\n    return this.executeUtil(key, ensureExists(this.data, key, defaultValue))\n  }\n\n  delete (key) {\n    return this.executeUtil(key, del(this.data, key))\n  }\n\n  has (key) {\n    return has(this.data, key)\n  }\n\n  merge (key, data) {\n    return this.executeUtil(key, merge(this.data, key, data))\n  }\n\n  increment (key, by) {\n    return this.executeUtil(key, increment(this.data, key, by))\n  }\n\n  decrement (key, by) {\n    return this.executeUtil(key, decrement(this.data, key, by))\n  }\n\n  toggle (key) {\n    return this.executeUtil(key, toggle(this.data, key))\n  }\n\n  isEqual (key, value) {\n    return isEqual(this.data, key, value)\n  }\n\n  paths (keys, id, delimiter) {\n    const segment = new Segment(keys, id, delimiter || this.delimiter, this, this.dataObserver)\n    this.segments.push(segment)\n    return segment\n  }\n\n  bind (options = {}) {\n    const { to, afterUpdate, id, delimiter, paths } = options\n    let component = to\n    if (Array.isArray(component)) {\n      component = to[1]\n    }\n    let segment\n    segment = component.__segment\n    if (segment) {\n      return segment.link(to)\n    }\n    segment = this.paths(paths, id, delimiter)\n    segment.onUpdate(afterUpdate)\n    const link = segment.link(to)\n\n    if (Array.isArray(to)) {\n      return link\n    }\n    return segment\n  }\n\n  removeSegment (segment) {\n    const index = this.segments.indexOf(segment)\n    if (index > -1) {\n      segment.teardown()\n      this.segments.splice(index, 1)\n    }\n  }\n\n  onUpdate (func) {\n    if (typeof func === 'function') {\n      this.onUpdateEvents.push(func)\n    }\n  }\n\n  executeOnUpdateEvents (changed, changedKeys) {\n    this.onUpdateEvents.forEach((func) => {\n      try {\n        func(changed, changedKeys, this.data, this)\n      } catch (ex) {\n        console.log('onUpdate', func, changedKeys)\n      }\n    })\n  }\n\n  _unlinkComponentFromAllSegments (component) {\n    this.segments.forEach((segment) => {\n      segment.unlink(component)\n    })\n  }\n\n  teardown () {\n    this.segments.forEach((segment) => {\n      segment.teardown()\n    })\n    this.dataObserver.teardown()\n    delete this.dataObserver\n    this.data = {}\n  }\n}\nexport default Clearx\n"],"names":["process","env","NODE_ENV","navigator","product","Error","self","crypto","msCrypto","module","isMergeableObject","value","isNonNullObject","stringValue","Object","prototype","toString","call","$$typeof","REACT_ELEMENT_TYPE","isReactElement","isSpecial","Symbol","for","cloneUnlessOtherwiseSpecified","options","clone","deepmerge","val","Array","isArray","defaultArrayMerge","target","source","concat","map","element","arrayMerge","sourceIsArray","destination","keys","forEach","key","mergeObject","all","array","reduce","prev","next","factory","keyList","hasProp","hasOwnProperty","equal","a","b","i","length","arrA","arrB","dateA","Date","dateB","getTime","regexpA","RegExp","regexpB","toNumber","isNaN","assign","obj","hasEqual","obj1","obj2","undefined","split","path","seperator","escape","const","l","charKey","push","get","defaultValue","remaining","set","dontReplace","let","isDataUpdated","ensureExists","arrayMethods","arrayOps","method","indexOf","arr","apply","args","ex","values","unshift","splice","slice","result","sort","increment","by","del","len","SegmentHelper","paths","delimiter","store","dataObserver","this","components","_afterUpdateEvents","_dataTransformers","prototypeAccessors","observe","force","cancelObserver","observer","listener","updateComponents","bind","cancelDataListener","attachObserver","unobserve","listenUnmount","component","onUnmount","componentWillUnmount","__original","unlistenUnmount","original","dataTransformer","func","dataTransformers","applyDataTransformers","data","console","log","updateData","freeze","_data","assignState","executeAfterUpdate","assignStateFC","initialAssignment","setState","assignStateCC","state","assignStateOthers","initial","updatedSC","updatedCC","onUpdate","afterUpdateEvents","hasDataListener","addMark","mark","comp","__segment","removeMark","Segment","id","size","bytes","getRandomValues","Uint8Array","nanoid","_helper","findComponent","search","active","link","helper","unlink","_unlinkComponentFromAllSegments","keepSyncing","idx","sync","on","unlinkAll","teardown","removeSegment","DataObserver","listeners","counter","dataUpdatedAt","changedKey","targets","changedPath","join","filter","keyPath","startsWith","ref","Clearx","segments","onUpdateEvents","triggerEvents","executeUtil","changed","executeOnUpdateEvents","status","doNotReplace","coalesce","keysArr","empty","finalValue","insert","position","at","pop","shift","delete","has","merge","current","merged","decrement","toggle","existing","isEqual","segment","to","afterUpdate","index","changedKeys"],"mappings":"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"}