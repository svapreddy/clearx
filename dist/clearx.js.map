{"version":3,"file":"clearx.js","sources":["../node_modules/nanoid/index.browser.js","../node_modules/deepmerge/dist/umd.js","../node_modules/fast-deep-equal/index.js","../src/object-utils.js","../src/segment-helper.js","../src/segment.js","../src/data-observer.js","../src/clearx.js"],"sourcesContent":["if (process.env.NODE_ENV !== 'production') {\n  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n      'If you don’t need unpredictable IDs, you can use `nanoid/non-secure`. ' +\n      'For secure ID install `expo-random` locally and use `nanoid/async`.'\n    )\n  }\n  if (typeof self === 'undefined' || (!self.crypto && !self.msCrypto)) {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n      'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\n\nvar crypto = self.crypto || self.msCrypto\n\n/*\n * This alphabet uses a-z A-Z 0-9 _- symbols.\n * Symbols order was changed for better gzip compression.\n */\nvar url = 'Uint8ArdomValuesObj012345679BCDEFGHIJKLMNPQRSTWXYZ_cfghkpqvwxyz-'\n\nmodule.exports = function (size) {\n  size = size || 21\n  var id = ''\n  var bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (0 < size--) {\n    id += url[bytes[size] & 63]\n  }\n  return id\n}\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.deepmerge = factory());\n}(this, (function () { 'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tObject.keys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tObject.keys(source).forEach(function(key) {\n\t\tif (!options.isMergeableObject(source[key]) || !target[key]) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = deepmerge(target[key], source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nreturn deepmerge_1;\n\n})));\n","'use strict';\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    var arrA = isArray(a)\n      , arrB = isArray(b)\n      , i\n      , length\n      , key;\n\n    if (arrA && arrB) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    if (arrA != arrB) return false;\n\n    var dateA = a instanceof Date\n      , dateB = b instanceof Date;\n    if (dateA != dateB) return false;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n\n    var regexpA = a instanceof RegExp\n      , regexpB = b instanceof RegExp;\n    if (regexpA != regexpB) return false;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n\n    var keys = keyList(a);\n    length = keys.length;\n\n    if (length !== keyList(b).length)\n      return false;\n\n    for (i = length; i-- !== 0;)\n      if (!hasProp.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      key = keys[i];\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  return a!==a && b!==b;\n};\n","import deepmerge from 'deepmerge'\nimport equal from 'fast-deep-equal'\n\nconst toNumber = (val) => {\n  if (!isNaN(val)) {\n    return parseInt(val, 10)\n  }\n  return val\n}\n\nconst assign = (obj, key, val) => {\n  if (hasEqual(obj[key], val)) return false\n  obj[key] = val\n  return obj[key] === val\n}\n\nexport const freezeObject = (obj) => {\n  if (Object.freeze) Object.freeze(obj)\n  return obj\n}\n\nexport const hasEqual = (obj1, obj2) => {\n  return obj1 !== undefined && equal(obj1, obj2)\n}\n\nexport const split = (path, seperator = '.', escape = '\\\\') => {\n  if (!path) return []\n  if (Array.isArray(path)) return path\n  let keys = []\n  let key = ''\n  for (let i = 0, l = path.length; i < l; ++i) {\n    let charKey = path[i]\n    if ((charKey === seperator) && (path[i - 1] !== escape)) {\n      if (key.length > 0) {\n        keys.push(toNumber(key))\n      }\n      key = ''\n    } else {\n      if (charKey !== escape) {\n        key += path[i]\n      }\n    }\n  }\n  if (key.length > 0) {\n    keys.push(toNumber(key))\n  }\n  return keys\n}\n\nexport const get = (obj, keys, defaultValue) => {\n  if (obj === undefined) return defaultValue\n  if (!keys || keys.length === 0) {\n    return obj\n  }\n  keys = split(keys)\n  let [key, ...remaining] = keys\n  if (!isNaN(key)) {\n    key *= 1\n  }\n  return get(obj[key], remaining, defaultValue)\n}\n\nexport const set = (obj, keys, value, dontReplace) => {\n  let isDataUpdated = false\n\n  if (obj === undefined) return [false, isDataUpdated]\n  if (!keys || keys.length === 0) return [false, isDataUpdated]\n\n  keys = split(keys)\n  let [key, next, ...remaining] = keys\n  if (next !== undefined) {\n    if (!obj.hasOwnProperty(key)) {\n      const val = !isNaN(next) ? [] : {}\n      isDataUpdated = assign(obj, key, val)\n    }\n    const [_, __] = set(obj[key], [next, ...remaining], value, dontReplace)\n    return [_, __ || isDataUpdated]\n  } else {\n    if (obj.hasOwnProperty(key) && dontReplace) return [true, isDataUpdated]\n    isDataUpdated = assign(obj, key, value)\n    return [true, isDataUpdated]\n  }\n}\n\nexport const has = (obj, keys) => {\n  const value = get(obj, keys)\n  if (value === undefined || value === null) return false\n  return true\n}\n\nexport const ensureExists = (obj, keys, value) => {\n  return set(obj, keys, value, true)\n}\n\nconst arrayMethods = [ 'push', 'pop', 'splice', 'shift', 'unshift', 'sort' ]\n\nexport const arrayOps = (obj, keys, method, ...args) => {\n  if (arrayMethods.indexOf(method) === -1) return false\n  let arr = get(obj, keys)\n  if (!Array.isArray(arr)) {\n    arr = []\n    set(obj, keys, arr)\n  }\n  const origLength = arr.length\n  try {\n    arr[method].apply(arr, args)\n  } catch (ex) {\n    // Probably freeze!\n  }\n  return [true, true]\n}\n\nexport const insert = (obj, keys, value, at) => {\n  return arrayOps(obj, keys, 'splice', at, 0, value)\n}\n\nexport const push = (obj, keys, ...values) => {\n  return arrayOps(obj, keys, 'push', ...values)\n}\n\nexport const unshift = (obj, keys, ...args) => {\n  return arrayOps(obj, keys, 'unshift', ...args)\n}\n\nexport const pop = (obj, keys) => {\n  return arrayOps(obj, keys, 'pop')\n}\n\nexport const shift = (obj, keys) => {\n  return arrayOps(obj, keys, 'shift')\n}\n\nexport const splice = (obj, keys, ...args) => {\n  return arrayOps(obj, keys, 'splice', ...args)\n}\n\nexport const sort = (obj, keys, ...args) => {\n  return arrayOps(obj, keys, 'sort', ...args)\n}\n\nexport const increment = (obj, keys, by = 1) => {\n  let val = parseInt(get(obj, keys), 10)\n  if (isNaN(val)) {\n    val = 0\n  } else {\n    val += by\n  }\n  return set(obj, keys, val)\n}\n\nexport const decrement = (obj, keys, by = 1) => {\n  return increment(obj, keys, by * -1)\n}\n\nexport const toggle = (obj, keys) => {\n  const existing = !!get(obj, keys)\n  return set(obj, keys, !existing)\n}\n\nexport const empty = (obj, keys) => {\n  let isDataUpdated = false\n  const value = get(obj, keys)\n  if (value === undefined) return [true, isDataUpdated]\n  let finalValue\n  switch (true) {\n    case typeof value === 'string':\n      finalValue = ''\n      break\n    case typeof value === 'number':\n      finalValue = 0\n      break\n    case typeof value === 'boolean':\n      finalValue = false\n      break\n    case Array.isArray(value):\n      value.length = 0\n      break\n    case typeof value === 'object':\n      for (let i in value) {\n        if (value.hasOwnProperty(i)) {\n          isDataUpdated = delete value[i] || isDataUpdated\n        }\n      }\n      return [true, isDataUpdated]\n  }\n  return set(obj, keys, finalValue)\n}\n\nexport const coalesce = (obj, keysArr, defaultValue) => {\n  for (let i = 0, l = keysArr.length; i < l; ++i) {\n    const val = get(obj, keysArr[i])\n    if (val !== undefined) {\n      return val\n    }\n  }\n  return defaultValue\n}\n\nexport const del = (obj, keys) => {\n  let isDataUpdated = false\n  if (obj === undefined) return [false, isDataUpdated]\n  if (!keys || keys.length === 0) return [false, isDataUpdated]\n  keys = split(keys)\n  let [key, ...remaining] = keys\n  if (keys.length === 1) {\n    if (Array.isArray(obj) && !isNaN(key)) {\n      const len = obj.length\n      obj.splice(key, 1)\n      isDataUpdated = len !== obj.length\n    } else if (obj.hasOwnProperty(key)) {\n      isDataUpdated = delete obj[key]\n    }\n    return [true, isDataUpdated]\n  } else {\n    return del(obj[key], [...remaining])\n  }\n}\n\nexport const merge = (obj, keys, data) => {\n  return set(obj, keys, deepmerge(get(obj, keys), data))\n}\n","import { split, freezeObject } from './object-utils'\nimport deepmerge from 'deepmerge'\n\nclass SegmentHelper {\n  constructor (paths, keySeperator = '.', store, dataObserver) {\n    this.paths = paths\n    this.keySeperator = keySeperator\n    this.store = store\n    this.dataObserver = dataObserver\n    this.components = []\n    this.afterUpdateEvents = []\n  }\n  get keys () {\n    const paths = this.paths\n    if (Array.isArray(paths)) return paths\n    let keys = []\n    if (typeof paths === \"string\") {\n      keys = [split(paths, this.keySeperator)]\n    } else if (paths.toString() === \"[object Object]\") {\n      for (let key in paths) {\n        if (!paths.hasOwnProperty(key)) continue\n        keys.push(split(paths[key], this.keySeperator))\n      }\n    } else {\n      return paths\n    }\n    return keys\n  }\n  observe () {\n    if (this.components.length === 0) return\n    if (this.cancelObserver) return\n\n    const observer = this.dataObserver\n    const keys = this.keys\n    const listener = this.updateComponents.bind(this)\n    this.cancelDataListener = observer.attachObserver(keys, listener)\n  }\n  unobserve () {\n    if (!this.cancelDataListener) return\n    this.cancelDataListener()\n    delete this.cancelDataListener\n  }\n  listenUnmount (component, onUnmount) {\n    if (Array.isArray(component)) return () => {}\n    const componentWillUnmount = component.componentWillUnmount\n    component.componentWillUnmount = () => {\n      onUnmount()\n      if (typeof this.componentWillUnmount === 'function') {\n        this.componentWillUnmount.call(component)\n      }\n    }\n    component.componentWillUnmount.__original = componentWillUnmount\n  }\n  unlistenUnmount (component) {\n    const componentWillUnmount = component.componentWillUnmount\n    if (!componentWillUnmount) return\n    const original = component.componentWillUnmount.__original\n    if (!original) return\n    component.componentWillUnmount = original\n  }\n  updateData () {\n    let data = {}\n    let paths = this.paths\n\n    if (typeof paths === \"string\") {\n        paths = split(paths, this.keySeperator)\n        data = this.store.get(paths)\n    } else if (Array.isArray(paths)) {\n        data = paths.map((path) => {\n            let key = split(path, this.keySeperator)\n            return this.store.get(key)\n        })\n    } else {\n        for (let key in paths) {\n            let path = split(paths[key], this.keySeperator)\n            data[key] = this.store.get(path)\n        }\n    }\n\n    if (typeof data === \"object\") {\n        data = freezeObject(deepmerge({}, data))\n    }\n\n    this.data = data\n  }\n  updateComponents () {\n    this.updateData()\n    this.components.forEach((component) => {\n      this.assignState(component)\n    })\n    this.executeAfterUpdate()\n  }\n  assignStateFC (component, initialAssignment) {\n    let _, setState\n    if (Array.isArray(component)) {\n      [_, setState] = component\n    }\n    if (!setState) return\n    if (initialAssignment) return true\n    setState(this.data)\n    component[0] = this.data\n    return true\n  }\n  assignStateCC (component, initialAssignment) {\n    if (typeof component.setState !== 'function') return\n    if (initialAssignment) {\n      component.state = component.state || {}\n      component.state.store = this.data\n    } else {\n      component.setState({\n        store: this.data\n      })\n    }\n    return true\n  }\n  assignStateOthers (component) {\n    if (typeof component === \"object\") {\n      component.data = this.data\n    }\n  }\n  assignState (component, initial = false) {\n    const updatedSC = this.assignStateFC(component, initial)\n    const updatedCC = this.assignStateCC(component, initial)\n    if (!updatedSC && !updatedCC) {\n      this.assignStateOthers(component, initial)\n    }\n  }\n  executeAfterUpdate () {\n    this.afterUpdateEvents.forEach((func) => {\n      try {\n        func(this.data)\n      } catch (ex) {\n        console.log(ex)\n      }\n    })\n  }\n  addMark (component, mark) {\n    let comp = component\n    if (Array.isArray(component)) {\n      comp = component[1]\n    }\n    comp.__segment = mark\n  }\n  removeMark (component) {\n    let comp = component\n    if (Array.isArray(component)) {\n      comp = component[1]\n    }\n    delete comp.__segment\n  }\n}\n\nexport default SegmentHelper","import nanoid from 'nanoid'\nimport SegmentHelper from './segment-helper'\n\nclass Segment {\n  constructor (paths, id, keySeperator, store, dataObserver) {\n    \n    this.id = id || nanoid()\n    this.paths = paths\n\n    this._helper = new SegmentHelper(paths, keySeperator, store, dataObserver)\n    \n    this.keySeperator = keySeperator\n    this.store = store\n    this.dataObserver = dataObserver\n    this.dataTransformers = []\n  }\n\n  dataTransformer (func) {\n    if (typeof func === \"function\") this.dataTransformers.push(func)\n  }\n\n  findComponent (search) {\n    if (Array.isArray(search)) {\n      search = search[1]\n    }\n    const components = this._helper.components\n    for (let i = 0; i < components.length; i++) {\n      let component = components[i]\n      if (Array.isArray(component)) {\n        component = component[1]\n      }\n      if (search === component) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  linkComponent (component) {\n    if (!component) return\n    const helper = this._helper\n    const unlinkComponent = this.unlinkComponent.bind(this, component)\n    const retObject = {\n      data: this.data,\n      unlinkComponent\n    }\n    if (this.findComponent(component) > -1) return retObject\n    helper.components.push(component)\n    helper.observe()\n    helper.addMark(component, this)\n    helper.listenUnmount(component, unlinkComponent)\n    helper.assignState(component, true)\n    return retObject\n  }\n\n  get data () {\n    const helper = this._helper\n    if (!helper.data) {\n      helper.updateData()\n    }\n    return helper.data\n  }\n\n  get components () {\n    return this._helper.components.slice(0)\n  }\n\n  get afterUpdateEvents () {\n    return this._helper.afterUpdateEvents.slice(0)\n  }\n\n  unlinkComponent (component) {\n    if (!component) return\n    const helper = this._helper\n    const idx = this.findComponent(component)\n    if (idx > -1) {\n      helper.removeMark(component)\n      helper.components.splice(idx, 1)\n      helper.unlistenUnmount(component)\n    }\n    if (helper.components.length === 0) {\n      helper.unobserve()\n    }\n  }\n\n  onUpdate (func) {\n    if (typeof func === \"function\") {\n      this._helper.afterUpdateEvents.push(func)\n    }\n  }\n\n  teardown () {\n    delete this._helper\n    delete this.dataObserver\n  }\n}\n\nexport default Segment","import { split } from './object-utils'\nclass DataObserver {\n  constructor (store) {\n    this.store = store\n    this.listeners = {}\n    this.counter = 0\n  }\n  attachObserver (keys, listener) {\n    if (!listener) return\n    if (!keys || keys.length === 0) return\n    ++this.counter\n    const id = `data-slice:${this.counter}`\n    this.listeners[id] = {\n      keys,\n      listener\n    }\n    return () => {\n      delete this.listeners[id]\n    }\n  }\n  dataUpdatedAt (changedKey) {\n    const seperator = '>>'\n    const targets = []\n    const changedPath = split(changedKey).join(seperator)\n    for (let id in this.listeners) {\n      let { keys, listener } = this.listeners[id]\n      keys = keys.filter((key) => {\n        const keyPath = split(key).join(seperator)\n        return keyPath.startsWith(changedPath) || changedPath.startsWith(keyPath)\n      })\n      if (keys.length > 0) targets.push([keys, listener])\n    }\n    targets.forEach(([keys, listener]) => {\n      try {\n        listener(keys)\n      } catch (ex) {\n        console.log('Error updating', listener, keys)\n      }\n    })\n  }\n  teardown () {\n    this.listeners = {}\n  }\n}\nexport default DataObserver\n","import Segment from './segment'\nimport DataObserver from './data-observer'\nimport { sort, get, set, coalesce, empty, insert, push, pop, shift, splice, unshift, ensureExists, del, has, merge, increment, decrement, toggle } from './object-utils'\nimport equal from 'fast-deep-equal'\n\nclass Clearx {\n  constructor (data, { keySeperator = '.' } = {}) {\n    this.data = data\n    this.segments = []\n    this.dataObserver = new DataObserver(this)\n    this.keySeperator = keySeperator\n  }\n  triggerEvents (key) {\n    this.dataObserver.dataUpdatedAt(key)\n  }\n  executeUtil (key, [status, changed]) {\n    if (changed) this.triggerEvents(key)\n    return status\n  }\n  get (key, defaultValue) {\n    return get(this.data, key, defaultValue)\n  }\n  set (key, value, doNotReplace = false) {\n    return this.executeUtil(key, set(this.data, key, value, doNotReplace))\n  }\n  coalesce (keys, defaultValue) {\n    return coalesce(this.data, keys, defaultValue)\n  }\n  empty (key) {\n    return this.executeUtil(key, empty(this.data, key))\n  }\n  insert (key, value, position) {\n    return this.executeUtil(key, insert(this.data, key, value, position))\n  }\n  push (key, ...values) {\n    return this.executeUtil(key, push(this.data, key, ...values))\n  }\n  unshift (key, ...values) {\n    return this.executeUtil(key, unshift(this.data, key, ...values))\n  }\n  pop (key) {\n    return this.executeUtil(key, pop(this.data, key))\n  }\n  shift (key) {\n    return this.executeUtil(key, shift(this.data, key))\n  }\n  splice (key, ...args) {\n    return this.executeUtil(key, splice(this.data, key, ...args))\n  }\n  sort (key, ...args) {\n    return this.executeUtil(key, sort(this.data, key, ...args))\n  }\n  ensureExists (key, defaultValue) {\n    return this.executeUtil(key, ensureExists(this.data, key, defaultValue))\n  }\n  delete (key) {\n    return this.executeUtil(key, del(this.data, key))\n  }\n  has (key) {\n    return has(this.data, key)\n  }\n  merge (key, data) {\n    return this.executeUtil(key, merge(this.data, key, data))\n  }\n  increment (key, by) {\n    return this.executeUtil(key, increment(this.data, key, by))\n  }\n  decrement (key, by) {\n    return this.executeUtil(key, decrement(this.data, key, by))\n  }\n  toggle (key) {\n    return this.executeUtil(key, toggle(this.data, key))\n  }\n  paths (keys, id, keySeperator) {\n    const segment = new Segment(keys, id, keySeperator || this.keySeperator, this, this.dataObserver)\n    this.segments.push(segment)\n    return segment\n  }\n  bind (options = {}) {\n    \n    const { to, afterUpdate, id, keySeperator, paths } = options\n    let component = to\n    if (Array.isArray(component)) {\n      component = to[1]\n    }\n    let segment\n    segment = component.__segment\n    if (segment) {\n      return segment.linkComponent(to)\n    }\n    segment = this.paths(paths, id, keySeperator)\n    segment.onUpdate(afterUpdate)\n    const link = segment.linkComponent(to)\n\n    if (Array.isArray(to)) {\n      return link\n    }\n    return segment\n  }\n  destroySegment (segment) {\n    const index = this.segments.indexOf(segment)\n    if (index > -1) this.segments.splice(index, 1)\n  }\n  destroy () {\n    this.segments.forEach((segment) => {\n      segment.teardown()\n    })\n    this.dataObserver.teardown()\n    this.data = {}\n  }\n}\nexport default Clearx\n"],"names":["process","env","NODE_ENV","navigator","product","Error","self","crypto","msCrypto","module","isMergeableObject","value","stringValue","Object","prototype","toString","call","$$typeof","REACT_ELEMENT_TYPE","Symbol","for","cloneUnlessOtherwiseSpecified","options","clone","deepmerge","val","Array","isArray","defaultArrayMerge","target","source","concat","map","element","arrayMerge","destination","sourceIsArray","targetIsArray","sourceAndTargetTypesMatch","keys","forEach","key","all","array","reduce","prev","next","factory","keyList","hasProp","hasOwnProperty","toNumber","isNaN","parseInt","assign","obj","hasEqual","obj1","obj2","undefined","equal","a","b","i","length","arrA","arrB","dateA","Date","dateB","getTime","regexpA","RegExp","regexpB","split","path","seperator","escape","let","l","charKey","push","get","defaultValue","remaining","set","dontReplace","isDataUpdated","const","arrayMethods","arrayOps","method","indexOf","arr","apply","args","ex","increment","by","del","len","splice","SegmentHelper","paths","keySeperator","store","dataObserver","this","components","afterUpdateEvents","prototypeAccessors","observe","cancelObserver","observer","listener","updateComponents","bind","cancelDataListener","attachObserver","unobserve","listenUnmount","component","onUnmount","componentWillUnmount","__original","unlistenUnmount","original","updateData","data","freeze","assignState","executeAfterUpdate","assignStateFC","initialAssignment","setState","assignStateCC","state","assignStateOthers","initial","updatedSC","updatedCC","func","console","log","addMark","mark","comp","__segment","removeMark","Segment","id","size","bytes","getRandomValues","Uint8Array","nanoid","_helper","dataTransformers","dataTransformer","findComponent","search","linkComponent","helper","unlinkComponent","retObject","slice","idx","onUpdate","teardown","DataObserver","listeners","counter","dataUpdatedAt","changedKey","targets","changedPath","join","filter","keyPath","startsWith","ref","Clearx","segments","triggerEvents","executeUtil","status","doNotReplace","coalesce","keysArr","empty","finalValue","insert","position","values","unshift","pop","shift","sort","ensureExists","delete","has","merge","decrement","toggle","existing","segment","to","afterUpdate","link","destroySegment","index","destroy"],"mappings":"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"}